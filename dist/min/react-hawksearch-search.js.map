{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/Store.ts","webpack:///./src/models/Search/Pagination.ts","webpack:///./src/models/Search/Result.ts","webpack:///./src/models/Search/Sorting.ts","webpack:///./src/models/Search/Selections.ts","webpack:///./src/models/Facets/Value.ts","webpack:///./src/models/Facets/Swatch.ts","webpack:///./src/models/Facets/Range.ts","webpack:///./src/models/Facets/Facet.ts","webpack:///./src/models/Search/Rule.ts","webpack:///./src/models/Search/Trigger.ts","webpack:///./src/models/Search/Merchandising.ts","webpack:///./src/models/Search/PageContent.ts","webpack:///./src/models/Search/Response.ts","webpack:///./src/models/Search/ClientData.ts","webpack:///./src/models/Search/ContentType.ts","webpack:///./src/store/HawkState.ts","webpack:///./src/util/MergableState.ts","webpack:///./src/components/StoreProvider.tsx","webpack:///./src/util/History.ts","webpack:///./src/util/QueryString.ts","webpack:///./src/components/QueryStringListener.tsx","webpack:///./src/components/ui/SearchBox/SearchBox.tsx","webpack:///./src/components/svg/PlusSVG.tsx","webpack:///./src/components/svg/MinusSVG.tsx","webpack:///./src/components/svg/QuestionmarkSVG.tsx","webpack:///./src/components/ui/Facets/Facet.tsx","webpack:///./src/components/ui/Facets/PlaceholderFacetValue.tsx","webpack:///./src/components/ui/Facets/PlaceholderFacet.tsx","webpack:///./src/components/svg/DashCircleSVG.tsx","webpack:///./src/components/svg/CheckmarkSVG.tsx","webpack:///./src/components/svg/PlusCircleSVG.tsx","webpack:///./src/components/ui/Facets/FacetTypes/Checkbox.tsx","webpack:///./src/components/ui/Facets/FacetTypes/Search.tsx","webpack:///./src/components/ui/Facets/FacetTypes/Link.tsx","webpack:///./src/components/ui/Facets/SliderNumericInputs.tsx","webpack:///./src/components/ui/Facets/FacetTypes/Slider.tsx","webpack:///./src/components/ui/Facets/FacetTypes/SwatchItem.tsx","webpack:///./src/components/ui/Facets/FacetTypes/Swatch.tsx","webpack:///./src/components/ui/Facets/FacetTypes/NestedItem.tsx","webpack:///./src/components/ui/Facets/FacetTypes/Nested.tsx","webpack:///./src/components/ui/Facets/FacetTypes/OpenRange.tsx","webpack:///./src/models/Facets/FacetType.ts","webpack:///./src/components/ui/Facets/Overrides.ts","webpack:///./src/components/ui/Facets/FacetList.tsx","webpack:///./src/components/ui/Facets/FacetRail.tsx","webpack:///./src/components/svg/LeftChevronSVG.tsx","webpack:///./src/components/svg/RightChevronSVG.tsx","webpack:///./src/components/ui/Results/Tools/Pager.tsx","webpack:///./src/components/ui/Results/Tools/ItemsPerPage.tsx","webpack:///./src/components/ui/Results/Tools/Pagination.tsx","webpack:///./src/components/ui/Results/Tools/Sorting.tsx","webpack:///./src/components/ui/Results/ToolRow.tsx","webpack:///./src/components/ui/Results/PlaceholderImage.tsx","webpack:///./src/components/ui/Results/PlaceholderItem.tsx","webpack:///./src/components/ui/Spinner.tsx","webpack:///./src/components/ui/Results/ResultImage.tsx","webpack:///./src/components/ui/Results/ResultItem.tsx","webpack:///./src/components/ui/Results/ResultListing.tsx","webpack:///./src/components/svg/XCircleSVG.tsx","webpack:///./src/components/ui/Facets/Selections.tsx","webpack:///./src/components/ui/Facets/SearchResultsLabel.tsx","webpack:///./src/components/ui/Results/Results.tsx","webpack:///./src/app/App.tsx","webpack:///./src/components/HawkSearch.tsx","webpack:///./src/app/Search.tsx","webpack:///./src/net/HawkClient.ts","webpack:///./src/components/ui/SearchBox/SearchSuggestions.tsx","webpack:///./src/components/ui/SearchBox/SearchBoxBase.tsx","webpack:///./src/components/ConfigProvider.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","p","jsonpScriptSrc","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","FacetSelectionState","SearchStore","initial","assign","this","facet","facetValue","facetName","Name","facetField","selectionField","valueValue","Value","valueLabel","Label","state","NotSelected","facetSelections","pendingSearch","FacetSelections","selectionIdx","indexOf","negationIdx","Selected","selectedValue","selectionIndex","Negated","selectionValue","facetValues","matchingValue","findMatchingValue","Children","isLoading","searchResults","clientSelections","SearchWithin","selections","facets","Facets","find","f","searchWithin","label","items","keys","forEach","fieldName","selectionValues","FieldType","matchingVal","Values","Pagination","init","Items","map","PaginationItem","Result","field","Document","values","Sorting","SortingItem","Selections","selFacet","SelectionFacet","SelectionFacetValue","Swatch","Range","Facet","SwatchData","Ranges","v","DisplayType","TruncateThreshold","IsSearch","SearchThreshold","ParamName","Field","RuleType","RuleOperatorType","Rule","Parent","Rules","BannerTrigger","FeaturedItems","FeaturedItem","Merchandising","MerchandisingItem","PageContentItem","Trigger","PageContent","Response","Results","ContentType","useHawkState","initialSearch","initialValue","typeConstructor","setState","config","useHawkConfig","client","HawkClient","useState","prevState","newState","store","setStore","search","cancellationToken","async","IsInPreview","isInPreview","ClientGuid","clientGuid","axios","isCancel","Success","setSearch","doHistory","Keyword","setSearchSelections","PageNo","useEffect","cts","CancelToken","source","token","cancel","actor","toggleFacetValue","negate","isFacetSelected","selState","setFacetValues","clearFacet","clearFacetValue","clearAllFacets","HawkContext","React","createContext","useHawkSearch","useContext","StoreProvider","children","Provider","history","createBrowserHistory","parseSearchQueryString","queryObj","params","URLSearchParams","parsed","multipleValues","split","x","replace","parseQueryStringToObject","keyword","sort","pg","mpp","lp","PageId","lpurl","is100Coverage","pageId","SortBy","Number","MaxPerPage","CustomUrl","Is100CoverageTurnedOn","Boolean","getSearchQueryString","searchRequest","queryStringValues","escapedValues","unescapedValue","join","convertObjectToQueryString","String","doSearch","QueryStringListener","unlisten","listen","location","SearchBox","className","SearchBoxBase","onSubmit","downshift","currentTarget","PlusSVG","props","viewBox","class","focusable","aria-hidden","MinusSVG","QuestionmarkSVG","FacetContext","useFacet","searchActor","filter","setFilter","shouldTruncate","isTruncated","setTruncated","IsCollapsible","IsCollapsedDefault","isCollapsed","setCollapsed","shouldSearch","val","toLowerCase","remainingFacets","valuesBeforeTrunc","selectFacet","negateFacet","setFacets","decimalPrecision","renderer","renderTruncation","onClick","Tooltip","dangerouslySetInnerHTML","__html","onChange","placeholder","PlaceholderFacetValue","width","Math","round","random","style","PlaceholderFacet","numValues","Array","_","DashCircleSVG","fill","CheckmarkSVG","PlusCircleSVG","Checkbox","renderCheckMark","isSelected","renderFacetActions","isNegated","correspondingRange","rangeValueAssetUrl","dashboardUrl","AssetFullUrl","selectionState","aria-pressed","title","alt","textDecoration","Count","Search","hawkActor","input","setInput","onKeyDown","Link","SliderNumericInputs","sliderProps","minValue","setMinValue","maxValue","setMaxValue","reloadFacets","onValueChange","toString","thousandSeparator","isCurrency","prefix","currencySymbol","min","max","formattedValue","newMinValue","isNaN","onBlur","decimalScale","newMaxValue","Rheostat","lazy","Slider","range","floor","parseFloat","RangeMin","rangeMin","setMinRange","ceil","RangeMax","rangeMax","setMaxRange","RangeStart","rangeStart","setStartRange","RangeEnd","rangeEnd","setEndRange","IsCurrency","isCurency","setIsCurrency","CurrencySymbol","setCurrencySymbol","paramName","selectedValues","newRange","minVal","maxVal","selection","Suspense","fallback","currentMinValue","currentMaxValue","SwatchItem","item","swatchValue","swatchUrl","facetSwatch","AssetUrl","AssetName","colorSwatchStyle","backgroundColor","Color","listItemClassNames","onSwatchSelected","isColor","NestedItem","isExpanded","setIsExpanded","setIsTruncated","hierarchyValue","hierarchyChildren","remainingValues","shouldTruncateChildren","onValueSelected","aria-expanded","Path","Nested","OpenRange","FacetType","setStartValue","setEndValue","startVal","endVal","data-type","defaultFacetComponents","facetType","component","DefaultCheckbox","NestedCheckbox","DefaultNestedCheckbox","DefaultSearch","DefaultLink","DefaultSlider","DefaultSwatch","DefaultOpenRange","FacetList","numPlaceholders","components","overridedComponents","facetComponents","fType","fComponent","getFacetComponents","facetOverrides","IsVisible","registeredComponent","Component","FacetId","FacetRail","LeftChevronSVG","RightChevronSVG","Pager","page","totalPages","onPageChange","inputValue","setInputValue","hasError","setHasError","goToPage","pageNo","doInputError","parseInt","ItemsPerPage","paginationItem","PageSize","NofPages","sortingItem","ToolRow","PlaceholderImage","showSpinner","height","PlaceholderItem","Spinner","isVisible","ResultImage","websiteUrl","itemTitleFieldName","imageUrlFieldName","imageLoaded","setImageLoaded","imageUrl","getDocumentValue","itemName","RegExp","test","overflow","onLoad","ResultItem","ResultListing","DefaultResultItem","results","DocId","XCircleSVG","clearSelection","negation","startsWith","displayValue","selectedRange","splittedValues","renderRange","SearchResultsLabel","App","renderSearchBox","elem","renderElem","searchBoxElement","getElementById","ReactDOM","createPortal","HawkSearch","ConfigProvider","initializeSearch","searchElement","searchUrl","path","endsWith","checkIfUrlRefsLandingPage","pathname","parseLocation","render","baseUrl","apiUrl","autocompleteUrl","post","URL","href","cancelToken","SearchSuggestions","query","setResults","setIsLoading","debounceMs","autocompleteDebounce","response","autocomplete","DisplayFullResponse","products","Products","getMenuProps","getItemProps","highlightedIndex","index","ProductName","Downshift","stateReducer","changes","itemToString","Url","initialInputValue","options","isOpen","getInputProps","openMenu","showSuggestions","onFocus","ConfigContext","context","assetPath","__webpack_public_path__"],"mappings":"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","file":"react-hawksearch-search.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"react-hawksearch-\" + ({\"4\":\"vendors~downshift\",\"5\":\"vendors~rheostat\"}[chunkId]||chunkId) + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([366,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import { Response, Request } from 'models/Search';\r\nimport { Value, Facet } from 'models/Facets';\r\nimport { ClientSelections, ClientSelectionValue } from 'store/ClientSelections';\r\n\r\nexport enum FacetSelectionState {\r\n\t/** The facet value is not selected. */\r\n\tNotSelected,\r\n\t/** The facet value is selected. */\r\n\tSelected,\r\n\t/** The facet value is selected, but negated. */\r\n\tNegated,\r\n}\r\n\r\nexport interface SelectionInfo {\r\n\t/** The facet value selection state. */\r\n\tstate: FacetSelectionState;\r\n\r\n\t/**\r\n\t * If the facet value is `FacetSelectionState.Selected` or `FacetSelectionState.Negated`, this is the value of\r\n\t * the facet value. For negated facet values this will be prefixed with the negation character `'-'`.\r\n\t */\r\n\tselectedValue?: string;\r\n\t/**\r\n\t * If the facet value is `FacetSelectionState.Selected` or `FacetSelectionState.Negated`, this is the index\r\n\t * into the `pendingSearch.FacetSelections[facetName]` array for this facet value.\r\n\t */\r\n\tselectionIndex?: number;\r\n}\r\n\r\nexport class SearchStore {\r\n\t/** This represents the next search request that will be executed. */\r\n\tpublic pendingSearch: Partial<Request>;\r\n\t/**\r\n\t * Whether or not the next search request will perform history actions (pushing the search into browser\r\n\t * history).\r\n\t */\r\n\tpublic doHistory: boolean;\r\n\r\n\t/** Whether or not a search request is waiting for completion. */\r\n\tpublic isLoading: boolean;\r\n\r\n\t/** The results of the last search request, if one has been performed. Otherwise, `undefined`. */\r\n\tpublic searchResults?: Response;\r\n\r\n\tpublic constructor(initial?: Partial<SearchStore>) {\r\n\t\tObject.assign(this, initial);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns whether or not this is the initial load of the search results.\r\n\t */\r\n\tpublic get isInitialLoad() {\r\n\t\treturn this.isLoading && !this.searchResults;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not the given facet and facet value is selected, and returns info regarding the selection.\r\n\t * @param facet The facet for which the facet value will be checked for selection.\r\n\t * @param facetValue The facet value that will be checked for selection.\r\n\t */\r\n\tpublic isFacetSelected(facet: Facet | string, facetValue: Value | string): SelectionInfo {\r\n\t\tconst facetName = typeof facet === 'string' ? facet : facet.Name;\r\n\t\tconst facetField = typeof facet === 'string' ? facet : facet.selectionField;\r\n\r\n\t\tconst valueValue = typeof facetValue === 'string' ? facetValue : facetValue.Value;\r\n\t\tconst valueLabel = typeof facetValue === 'string' ? facetValue : facetValue.Label;\r\n\r\n\t\tif (!valueValue) {\r\n\t\t\tconsole.error(`Facet ${facetName} (${facetField}) has no facet value for ${valueLabel}`);\r\n\t\t\treturn { state: FacetSelectionState.NotSelected };\r\n\t\t}\r\n\r\n\t\tconst facetSelections = this.pendingSearch.FacetSelections;\r\n\r\n\t\tif (!facetSelections || !facetSelections[facetField]) {\r\n\t\t\treturn { state: FacetSelectionState.NotSelected };\r\n\t\t}\r\n\r\n\t\tconst selectionIdx = facetSelections[facetField]!.indexOf(valueValue);\r\n\t\tconst negationIdx = facetSelections[facetField]!.indexOf(`-${valueValue}`);\r\n\r\n\t\tif (selectionIdx !== -1) {\r\n\t\t\t// if the exact facet value exists, then we're normally selected\r\n\t\t\treturn {\r\n\t\t\t\tstate: FacetSelectionState.Selected,\r\n\t\t\t\tselectedValue: valueValue,\r\n\t\t\t\tselectionIndex: selectionIdx,\r\n\t\t\t};\r\n\t\t} else if (negationIdx !== -1) {\r\n\t\t\t// if the facet value is selected but prefixed with a -, then we're negated\r\n\t\t\treturn {\r\n\t\t\t\tstate: FacetSelectionState.Negated,\r\n\t\t\t\tselectedValue: `-${valueValue}`,\r\n\t\t\t\tselectionIndex: negationIdx,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn { state: FacetSelectionState.NotSelected };\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an object containing the selections that have been made in both the next search request and also\r\n\t * in the previous search request. This should be used when iterating selections instead of pulling the values\r\n\t * out from the search result or pending search - as this will merge the values together and provide an accurate\r\n\t * view of all facet selections.\r\n\t */\r\n\tpublic get facetSelections(): ClientSelections {\r\n\t\tconst {\r\n\t\t\tpendingSearch: { FacetSelections: clientSelections, SearchWithin },\r\n\t\t\tsearchResults,\r\n\t\t} = this;\r\n\t\tconst selections: ClientSelections = {};\r\n\r\n\t\tif (!clientSelections && !SearchWithin) {\r\n\t\t\treturn selections;\r\n\t\t}\r\n\r\n\t\t// if we've made selections on the client, transform these into more detailed selections.\r\n\t\t// the client-side selections are just facet fields and values without any labels - so we\r\n\t\t// need to combine this information with the list of facets received from the server in the\r\n\t\t// previous search in order to return a rich list of selections\r\n\r\n\t\tconst facets = searchResults ? searchResults.Facets : null;\r\n\r\n\t\tif (!facets) {\r\n\t\t\t// but we can only do this if we've received facet information from the server. without this\r\n\t\t\t// info we can't determine what labels should be used\r\n\t\t\treturn selections;\r\n\t\t}\r\n\r\n\t\t// manually handle the `searchWithin` selection, as this doesn't usually behave like a normal facet selection\r\n\t\t// but instead a field on the search request\r\n\t\tif (SearchWithin) {\r\n\t\t\tconst facet = facets.find(f => f.selectionField === 'searchWithin');\r\n\r\n\t\t\tif (facet) {\r\n\t\t\t\tselections.searchWithin = {\r\n\t\t\t\t\tfacet,\r\n\t\t\t\t\tlabel: facet.Name,\r\n\t\t\t\t\titems: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: SearchWithin,\r\n\t\t\t\t\t\t\tvalue: SearchWithin,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!clientSelections) {\r\n\t\t\treturn selections;\r\n\t\t}\r\n\r\n\t\tObject.keys(clientSelections).forEach(fieldName => {\r\n\t\t\tconst selectionValues = clientSelections[fieldName];\r\n\r\n\t\t\tif (!selectionValues) {\r\n\t\t\t\t// if this selection has no values, it's not really selected\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst facet = facets.find(f => f.selectionField === fieldName);\r\n\r\n\t\t\tif (!facet) {\r\n\t\t\t\t// if there's no matching facet from the server, we can't show this since we'll have no labels\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst items: ClientSelectionValue[] = [];\r\n\r\n\t\t\tif (facet.FieldType === 'range') {\r\n\t\t\t\t// if the facet this selection is for is a range, there won't be a matching value and thus there won't be a label.\r\n\t\t\t\t// so because of this we'll just use the selection value as the label\r\n\r\n\t\t\t\tselectionValues.forEach(selectionValue => {\r\n\t\t\t\t\titems.push({\r\n\t\t\t\t\t\tlabel: selectionValue,\r\n\t\t\t\t\t\tvalue: selectionValue,\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// for other types of facets, try to find a matching value\r\n\r\n\t\t\t\tselectionValues.forEach(selectionValue => {\r\n\t\t\t\t\tconst matchingVal = this.findMatchingValue(selectionValue, facet.Values);\r\n\r\n\t\t\t\t\tif (!matchingVal || !matchingVal.Label) {\r\n\t\t\t\t\t\t// if there's no matching value from the server, we cannot display because there would\r\n\t\t\t\t\t\t// be no label - same if there's no label at all\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\titems.push({\r\n\t\t\t\t\t\tlabel: matchingVal.Label,\r\n\t\t\t\t\t\tvalue: selectionValue,\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tselections[fieldName] = {\r\n\t\t\t\tfacet,\r\n\t\t\t\tlabel: facet.Name,\r\n\t\t\t\titems,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn selections;\r\n\t}\r\n\r\n\tprivate findMatchingValue(selectionValue: string, facetValues: Value[]): Value | null {\r\n\t\tlet matchingValue: Value | null = null;\r\n\t\tif (!facetValues || facetValues.length === 0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tfor (const facetValue of facetValues) {\r\n\t\t\tconst isMatchingVal = facetValue.Value === selectionValue || `-${facetValue.Value}` === selectionValue;\r\n\t\t\t// loop through children\r\n\t\t\tif (!isMatchingVal) {\r\n\t\t\t\tmatchingValue = this.findMatchingValue(selectionValue, facetValue.Children);\r\n\t\t\t} else {\r\n\t\t\t\tmatchingValue = facetValue;\r\n\t\t\t}\r\n\r\n\t\t\tif (matchingValue) {\r\n\t\t\t\treturn matchingValue;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn matchingValue;\r\n\t}\r\n}\r\n","export class Pagination {\r\n\t/** Number of total items in the result set. */\r\n\tpublic NofResults: number;\r\n\r\n\t/** The page number returned. */\r\n\tpublic CurrentPage: number;\r\n\r\n\t/** The number of items returned for the page. */\r\n\tpublic MaxPerPage: number;\r\n\r\n\t/** The total number of pages for the result set - with the current @see MaxPerPage. */\r\n\tpublic NofPages: number;\r\n\r\n\t/** Set of pagination options */\r\n\tpublic Items: PaginationItem[];\r\n\r\n\tpublic constructor(init: Pagination) {\r\n\t\tObject.assign(this, init);\r\n\r\n\t\tthis.Items = init.Items.map(i => new PaginationItem(i));\r\n\t}\r\n}\r\n\r\nexport class PaginationItem {\r\n\t/** Display label for user's pagination option (i.e. 24 per page). */\r\n\tpublic Label: string;\r\n\t/** The maximum number of items that will be returned per page when this option is selected. */\r\n\tpublic PageSize: number;\r\n\r\n\t/** Indicates if this is the option selected. Only one pagination item will have this set to `true`. */\r\n\tpublic Selected: boolean;\r\n\r\n\t/** Indicates if this is the default option. Only one pagination item will have this set to `true`. */\r\n\tpublic Default: boolean;\r\n\r\n\tpublic constructor(init: PaginationItem) {\r\n\t\tObject.assign(this, init);\r\n\t}\r\n}\r\n","import { Explain } from './Explain';\r\n\r\nexport class Result {\r\n\t/** Unique identifier for this search result item. */\r\n\tpublic DocId: string;\r\n\r\n\t/** Calculated relevancy score. */\r\n\tpublic Score: number;\r\n\r\n\t/**\r\n\t * Contains the fields for the search result item, as an object of string keys to an array\r\n\t * of string values. The keys correspond to the name of the field within the hawk dashboard,\r\n\t * and the value of the map is an array of strings for each of the values for that field.\r\n\t */\r\n\tpublic Document?: { [field: string]: string[] };\r\n\r\n\tpublic Explain?: Explain;\r\n\r\n\tpublic IsPin: boolean;\r\n\t/**\r\n\t * Returns a single document value, by the given field name. If the field does not exist in\r\n\t * the document, or has no values, then `undefined` is returned instead.\r\n\t * @param field The field within the result document to retrieve the value of.\r\n\t */\r\n\tpublic getDocumentValue(field: string): string | undefined {\r\n\t\tif (this.Document) {\r\n\t\t\tconst values = this.Document[field];\r\n\r\n\t\t\tif (values && values.length > 0) {\r\n\t\t\t\treturn values[0];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tpublic constructor(init: Result) {\r\n\t\tObject.assign(this, init);\r\n\t}\r\n}\r\n","export class Sorting {\r\n\t/** The sorting items. */\r\n\tpublic Items: SortingItem[];\r\n\r\n\tpublic constructor(init: Sorting) {\r\n\t\tObject.assign(this, init);\r\n\r\n\t\tthis.Items = init.Items.map(i => new SortingItem(i));\r\n\t}\r\n}\r\n\r\nexport class SortingItem {\r\n\t/** Name of the sorting option. This is the label to display to users. */\r\n\tpublic Label: string;\r\n\t/**\r\n\t * The value to be used to specify the sort order once user selects it. This value is passed in the @see Request.SortBy\r\n\t * field in the @see Request object.\r\n\t */\r\n\tpublic Value: string;\r\n\r\n\t/** Indicates if this sorting option was configured to be the default. */\r\n\tpublic IsDefault: boolean;\r\n\t/** Indicates if this sorting option is currently being used for the current result set. */\r\n\tpublic Selected: boolean;\r\n\r\n\tpublic constructor(init: SortingItem) {\r\n\t\tObject.assign(this, init);\r\n\t}\r\n}\r\n","export class Selections {\r\n\t[field: string]: SelectionFacet;\r\n\r\n\tpublic constructor(init: Selections) {\r\n\t\tObject.assign(this, init);\r\n\r\n\t\tObject.keys(init).forEach(key => {\r\n\t\t\tconst selFacet = init[key];\r\n\r\n\t\t\tthis[key] = new SelectionFacet(selFacet);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport class SelectionFacet {\r\n\t/** Display name for facet. */\r\n\tpublic Label: string;\r\n\r\n\t/** Will contain an entry for each selection made within the facet. */\r\n\tpublic Items: SelectionFacetValue[];\r\n\r\n\tpublic constructor(init: SelectionFacet) {\r\n\t\tObject.assign(this, init);\r\n\r\n\t\tthis.Items = init.Items.map(i => new SelectionFacetValue(i));\r\n\t}\r\n}\r\n\r\nexport class SelectionFacetValue {\r\n\t/** Display label for facet value. */\r\n\tpublic Label: string;\r\n\r\n\t/** Value for facet value. */\r\n\tpublic Value: string;\r\n\r\n\tpublic constructor(init: SelectionFacetValue) {\r\n\t\tObject.assign(this, init);\r\n\t}\r\n}\r\n","export class Value {\r\n\t/** Label of the value to display. */\r\n\tpublic Label?: string;\r\n\t/** Value to use when setting the facet value selection. */\r\n\tpublic Value?: string;\r\n\r\n\t/** Number of results in current set that have this facet value. */\r\n\tpublic Count: number;\r\n\t/** Indicates if this facet value has been selected. */\r\n\tpublic Selected: boolean;\r\n\r\n\t/**\r\n\t * Used for displaying the slider facet. @see RangeStart indicates what the starting point of the range\r\n\t * to display, either on basis of what the user selected by sliding the slider, or if they have no\r\n\t * selection it reflects the lowest price product.\r\n\t */\r\n\tpublic RangeStart?: string;\r\n\t/**\r\n\t * Used for displaying the slider facet. @see RangeEnd indicates what the end point of the range to\r\n\t * display is, either on basis of what the user selected by sliding the slider, or if they have no\r\n\t * selection, it reflects the highest price product.\r\n\t */\r\n\tpublic RangeEnd?: string;\r\n\r\n\t/**\r\n\t * Used for displaying the slider facet. @see RangeMin indicates lowest value for the range in the list\r\n\t * of products displayed.\r\n\t */\r\n\tpublic RangeMin?: string;\r\n\t/**\r\n\t * Used for displaying the slider facet. @see RangeMax indicates highest value for the range in the list\r\n\t * of products displayed.\r\n\t */\r\n\tpublic RangeMax?: string;\r\n\r\n\t/** Used for nested facets. */\r\n\tpublic Path?: string;\r\n\r\n\t/** Set of pagination options */\r\n\tpublic Children: Value[];\r\n\r\n\tpublic Level: number;\r\n\r\n\tpublic constructor(init: Value) {\r\n\t\tObject.assign(this, init);\r\n\t}\r\n}\r\n","export class Swatch {\r\n\t/** Match this value to the @see Value object in the @see Values array of @see Facet. */\r\n\tpublic Value: string;\r\n\r\n\t/** Name of the asset. */\r\n\tpublic AssetName: string;\r\n\t/** URL of the asset. */\r\n\tpublic AssetUrl: string;\r\n\r\n\t/** Indicates if value is the default. */\r\n\tpublic IsDefault: boolean;\r\n\r\n\t/** Color of the asset. */\r\n\tpublic Color: string;\r\n\r\n\tpublic constructor(init: Swatch) {\r\n\t\tObject.assign(this, init);\r\n\t}\r\n}\r\n","export class Range {\r\n\t/** Label of the value to display. */\r\n\tpublic Label: string;\r\n\t/** Value to use when setting the facet value selection. */\r\n\tpublic Value: string;\r\n\r\n\t/** Indicates if the values are numeric. */\r\n\tpublic IsNumeric: boolean;\r\n\r\n\t/** Lower value of the range. */\r\n\tpublic LBound: string;\r\n\t/** Upper value of the range. */\r\n\tpublic UBound: string;\r\n\t/** Asset Url */\r\n\tpublic AssetFullUrl: string;\r\n\r\n\tpublic constructor(init: Range) {\r\n\t\tObject.assign(this, init);\r\n\t}\r\n}\r\n","import { Value } from './Value';\r\nimport { Swatch } from './Swatch';\r\nimport { Range } from './Range';\r\nimport { FacetType } from 'models/Facets/FacetType';\r\n\r\nexport class Facet {\r\n\t/** Unique identifier of the facet. */\r\n\tpublic FacetId: number;\r\n\r\n\t/** Display name of the facet. */\r\n\tpublic Name: string;\r\n\r\n\t/** The name of the field that is linked to this facet. */\r\n\tpublic Field: string;\r\n\r\n\tpublic FieldType: 'string' | 'range' | 'numeric' | 'search';\r\n\tpublic FacetType: FacetType;\r\n\r\n\tpublic DisplayType: 'default' | 'scrolling' | 'truncating';\r\n\r\n\t/** Indicates the maximum number of facet values that are returned. */\r\n\tpublic MaxCount: number;\r\n\r\n\t/** Indicates the minimum number of results each facet value needs to have in order to be returned. */\r\n\tpublic MinHitCount: number;\r\n\r\n\t/**\r\n\t * If this is set, it is to be used as the facet name if passed in the `FacetSelections`. If not set,\r\n\t * the value of the Field object would be used. (This is only applicable when a slider and range\r\n\t * facets are both configured for the same field.)\r\n\t */\r\n\tpublic ParamName?: string;\r\n\r\n\t/**\r\n\t * Indicates the sorting logic that is used for this facet’s values. The possible values for this\r\n\t * are the parameters for sorting set options that are configured in \"Workbench > Data Configuration\r\n\t * > Sorting/Pagination\".\r\n\t */\r\n\tpublic SortBy: string;\r\n\r\n\t/** Indicates if the user should be able to apply more than one filter value from this facet. */\r\n\tpublic ExpandSelection: boolean;\r\n\r\n\t/** Indicates if facet values are numeric. */\r\n\tpublic IsNumeric: boolean;\r\n\t/** Indicates if facet values are currency (and should be displayed appropriately). */\r\n\tpublic IsCurrency: boolean;\r\n\t/** Indicates currency symbol in case of currency type facets */\r\n\tpublic CurrencySymbol: string;\r\n\t/** Indicates if the facet can be collapsed and expanded by the user. */\r\n\tpublic IsCollapsible: boolean;\r\n\t/** If @see IsCollapsible is `true`, this indicates if the facet should initially be collapsed or expanded. */\r\n\tpublic IsCollapsedDefault: boolean;\r\n\t/** Indicates if the facet is set to be visible. */\r\n\tpublic IsVisible: boolean;\r\n\t/**\r\n\t * Indicates if search is enabled for this facet. If it is enabled, a search box should be available for\r\n\t * users to filter the facet values by typing in the search box.\r\n\t */\r\n\tpublic IsSearch: boolean;\r\n\r\n\t/**\r\n\t * If facet display type is Scrolling, this value is the height in pixels for the window inside scroll box.\r\n\t * Only to be used if @see DisplayType is `\"scrolling\"`.\r\n\t */\r\n\tpublic ScrollHeight: number;\r\n\t/**\r\n\t * If the number of facet values exceeds this number and @see DisplayType is `\"scrolling\"`, then the facet\r\n\t * should be displayed as scrolling list; if not, display as `\"default\"`.\r\n\t */\r\n\tpublic ScrollThreshold: number;\r\n\t/**\r\n\t * If the number of facet values exceeds this number and @see DisplayType is `\"truncate\"`, then the facet\r\n\t * should be displayed as truncated list; if not, display as `\"default\"`.\r\n\t */\r\n\tpublic TruncateThreshold: number;\r\n\t/**\r\n\t * To be used if @see IsSearch is `true`. The number of facet values must be this number or higher for the\r\n\t * facet search box to display.\r\n\t */\r\n\tpublic SearchThreshold: number;\r\n\r\n\t/** Text to display when user hovers over a help icon. */\r\n\tpublic Tooltip?: string;\r\n\r\n\t/**\r\n\t * If `false`, indicates that sometimes this facet will not be returned. The conditions that trigger its\r\n\t * display are maintained in the Workbench.\r\n\t */\r\n\tpublic AlwaysVisible: boolean;\r\n\r\n\t/**\r\n\t * The display order of the facet in the facet list.\r\n\t */\r\n\tpublic SortOrder: number;\r\n\r\n\t/** This is maximum number of values that could be returned for the facet. */\r\n\tpublic NofVisible: number;\r\n\r\n\t/** Will be included if @see FacetType is `\"swatch\"`. */\r\n\tpublic SwatchData: Swatch[];\r\n\r\n\t/** Indicates type of facet range display. */\r\n\tpublic FacetRangeDisplayType: number;\r\n\r\n\t/** Indicates if setting in Workbench is set to On or Off. */\r\n\tpublic PreloadChildren: boolean;\r\n\r\n\t/**\r\n\t * To be used if @see FacetType is `\"slider\"`. If @see ShowSliderInputs is `true`, input boxes should be\r\n\t * available for user to enter values.\r\n\t */\r\n\tpublic ShowSliderInputs: boolean;\r\n\r\n\t/** Always present, but will only be populated if the facet is numeric and not a slider. */\r\n\tpublic Ranges: Range[];\r\n\t/** The values for this facet. */\r\n\tpublic Values: Value[];\r\n\r\n\t/** Whether or not the facet should be rendered as truncated. */\r\n\tpublic get shouldTruncate() {\r\n\t\t// the facet does truncated listing of values if configured for truncating and we have too many facets\r\n\t\treturn this.DisplayType === 'truncating' && this.Values.length > this.TruncateThreshold;\r\n\t}\r\n\t/** Whether or not the facet should have a quick lookup search input. */\r\n\tpublic get shouldSearch() {\r\n\t\t// the facet should have a search box if configured to do so, and the number of facet values is greater\r\n\t\t// than the threshold\r\n\t\treturn this.IsSearch && this.Values.length > this.SearchThreshold;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the name of the key when using this facet for a selection. This will take into consideration\r\n\t * @see ParamName and @see Field in determining which value should be returned.\r\n\t */\r\n\tpublic get selectionField() {\r\n\t\treturn this.ParamName ? this.ParamName : this.Field;\r\n\t}\r\n\r\n\tpublic constructor(init: Facet) {\r\n\t\tObject.assign(this, init);\r\n\r\n\t\tthis.SwatchData = init.SwatchData.map(s => new Swatch(s));\r\n\t\tthis.Ranges = init.Ranges.map(r => new Range(r));\r\n\t\tthis.Values = init.Values.map(v => new Value(v));\r\n\t}\r\n}\r\n","export class Rule {\r\n\tpublic RuleType: RuleType;\r\n\tpublic Field: string;\r\n\tpublic Condition: string;\r\n\tpublic Value: string;\r\n\tpublic Operator: RuleOperatorType;\r\n\r\n\tpublic Rules: Rule[];\r\n\tpublic Parent: Rule;\r\n\tpublic constructor(init: Rule) {\r\n\t\tObject.assign(this, init);\r\n\t\tif (init.Parent) {\r\n\t\t\tthis.Parent = new Rule(init.Parent);\r\n\t\t}\r\n\t\tthis.Rules = init.Rules ? init.Rules.map(i => new Rule(i)) : [];\r\n\t}\r\n}\r\n\r\nexport enum RuleType {\r\n\tGroup = 0,\r\n\tEval = 1,\r\n}\r\n\r\nexport enum RuleOperatorType {\r\n\tAll = 0,\r\n\tAny = 1,\r\n\tNone = 2,\r\n}\r\n","import { Rule } from './Rule';\r\n\r\nexport class BannerTrigger {\r\n\tpublic BannerGroupId: number;\r\n\tpublic Name: string;\r\n\tpublic SortOrder: number;\r\n\tpublic Rule: Rule;\r\n\r\n\tpublic constructor(init: BannerTrigger) {\r\n\t\tObject.assign(this, init);\r\n\r\n\t\tthis.Rule = new Rule(this.Rule);\r\n\t}\r\n}\r\n","import { ContentType } from './ContentType';\r\nimport { Result } from './Result';\r\nimport { BannerTrigger } from './Trigger';\r\n\r\nexport class FeaturedItems {\r\n\tpublic Items: FeaturedItem[];\r\n\r\n\tpublic constructor(init: FeaturedItems) {\r\n\t\tObject.assign(this, init);\r\n\t\tif (init && init.Items) {\r\n\t\t\tthis.Items = init.Items.map(i => new FeaturedItem(i));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class Merchandising {\r\n\tpublic Items: MerchandisingItem[];\r\n\r\n\tpublic constructor(init: Merchandising) {\r\n\t\tObject.assign(this, init);\r\n\t\tif (init && init.Items) {\r\n\t\t\tthis.Items = init.Items.map(i => new MerchandisingItem(i));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class PageContentItem {\r\n\tpublic Zone: string;\r\n\tpublic ContentType: ContentType;\r\n\tpublic ImageUrl: string;\r\n\tpublic AltTag: string;\r\n\tpublic ForwardUrl: string;\r\n\tpublic Output: any;\r\n\tpublic WidgetArgs: string;\r\n\tpublic Title: string;\r\n\tpublic Name: string;\r\n\tpublic DateFrom: string;\r\n\tpublic DateTo: string;\r\n\tpublic IsMobile: boolean;\r\n\tpublic MobileContentType: string;\r\n\tpublic MobileImageUrl: string;\r\n\tpublic MobileOutput: string;\r\n\tpublic MobileWidgetArgs: string;\r\n\tpublic IsTrackingEnabled: boolean;\r\n\tpublic MobileIsTrackingEnabled?: boolean;\r\n\tpublic FeaturedItems: Result[];\r\n\tpublic Items: Result[];\r\n\tpublic Target: string;\r\n\tpublic MobileTarget: string;\r\n\tpublic MobileAltTag: string;\r\n\tpublic MobileForwardUrl: string;\r\n\tpublic MobileWidth: string;\r\n\tpublic MobileHeight: string;\r\n\tpublic Trigger: BannerTrigger;\r\n\r\n\tpublic constructor(init: PageContentItem) {\r\n\t\tObject.assign(this, init);\r\n\t\tif (init.FeaturedItems) {\r\n\t\t\tthis.FeaturedItems = init.FeaturedItems.map(i => new Result(i));\r\n\t\t}\r\n\t\tif (init.Trigger) {\r\n\t\t\tthis.Trigger = new BannerTrigger(init.Trigger);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class FeaturedItem extends PageContentItem {\r\n\tpublic Items: Result[];\r\n\r\n\tpublic constructor(init: FeaturedItem) {\r\n\t\tsuper(init);\r\n\t\tObject.assign(this, init);\r\n\t\tthis.Items = init.Items.map(i => new Result(i));\r\n\t}\r\n}\r\n\r\nexport class MerchandisingItem extends PageContentItem {\r\n\tpublic constructor(init: MerchandisingItem) {\r\n\t\tsuper(init);\r\n\t\tObject.assign(this, init);\r\n\t}\r\n}\r\n","import { PageContentItem } from './Merchandising';\r\n\r\nexport class PageContent {\r\n\tpublic ZoneName: string;\r\n\tpublic Items: PageContentItem[];\r\n\tpublic constructor(init: PageContent) {\r\n\t\tObject.assign(this, init);\r\n\t\tthis.Items = init.Items.map(i => new PageContentItem(i));\r\n\t}\r\n}\r\n","import { Pagination } from './Pagination';\r\nimport { Result } from './Result';\r\nimport { Sorting } from './Sorting';\r\nimport { Selections } from './Selections';\r\nimport { Facet } from 'models/Facets';\r\nimport { Merchandising, FeaturedItems } from './Merchandising';\r\nimport { StringLiteral } from '@babel/types';\r\nimport { PageContent } from './PageContent';\r\n\r\nexport class Response {\r\n\t/** Indicates if request was successful. */\r\n\tpublic Success: boolean;\r\n\r\n\t/** Summary of pagination details and a set of pagination options. */\r\n\tpublic Pagination: Pagination;\r\n\r\n\t/**\r\n\t * The Keyword value that was sent to Hawksearch in the request. If no Keyword was set in the\r\n\t * request, the value will be empty.\r\n\t */\r\n\tpublic Keyword: string;\r\n\r\n\t/**\r\n\t * If this is populated, it indicates that the Keyword value returned 0 results, but the results\r\n\t * in this response are from this AdjustedKeyword.  A message should be displayed to the user\r\n\t * informing them that their search was corrected to this string.\r\n\t *\r\n\t * This is the result of Auto Correct, which is configured in the Workbench > Keyword Search >\r\n\t * Did You Mean.\r\n\t */\r\n\tpublic AdjustedKeyword?: string;\r\n\r\n\t/** An entry in the array for each item returned in search results. */\r\n\tpublic Results: Result[];\r\n\r\n\tpublic Facets: Facet[];\r\n\r\n\t/**\r\n\t * Will contain an entry for each facet that has one or more selections. Will be empty if no facet\r\n\t * selections have been made.\r\n\t */\r\n\tpublic Selections: Selections;\r\n\r\n\tpublic Sorting: Sorting;\r\n\r\n\t/**\r\n\t * If any strings are returned in the array, they should be displayed to the user as suggested\r\n\t * search terms.\r\n\t *\r\n\t * This is the result of Did You Mean, which is configured in the Workbench > Keyword Search >\r\n\t * Did You Mean.\r\n\t */\r\n\tpublic DidYouMean: string[];\r\n\r\n\t/**\r\n\t * Merchandising can be placed by using Campaigns in the Hawksearch Workbench. The Campaign will\r\n\t * determine if the content should appear and in what zone.\r\n\t */\r\n\tpublic Merchandising: Merchandising; // TODO: merchandising object\r\n\tpublic FeaturedItems: FeaturedItems; // TODO: featured items object\r\n\r\n\tpublic SearchDuration: number;\r\n\r\n\tpublic DocExplain?: string;\r\n\r\n\t/**\r\n\t * Properties that gets populated when user requests landing page related results\r\n\t *\r\n\t */\r\n\r\n\tpublic Breadcrumb: string;\r\n\r\n\tpublic CustomHtml: string;\r\n\r\n\tpublic HeaderTitle: string;\r\n\r\n\tpublic MetaDescription: string;\r\n\r\n\tpublic MetaKeywords: string;\r\n\tpublic MetaRobots: string;\r\n\tpublic Name: string;\r\n\tpublic Next: string;\r\n\tpublic Prev: string;\r\n\tpublic PageHeading: string;\r\n\tpublic PageContent: PageContent[];\r\n\tpublic RelCanonical: string;\r\n\tpublic PageLayoutId: number;\r\n\t// end of landing page related fields\r\n\tpublic constructor(init: Response) {\r\n\t\tObject.assign(this, init);\r\n\r\n\t\tthis.Pagination = new Pagination(init.Pagination);\r\n\t\tthis.Merchandising = new Merchandising(init.Merchandising);\r\n\t\tthis.FeaturedItems = new FeaturedItems(init.FeaturedItems);\r\n\t\tthis.Results = init.Results.map(r => new Result(r));\r\n\t\tthis.Facets = init.Facets.map(f => new Facet(f));\r\n\t\tthis.PageContent = init.PageContent ? init.PageContent.map(p => new PageContent(p)) : [];\r\n\t\tthis.Selections = new Selections(init.Selections);\r\n\t\tthis.Sorting = new Sorting(init.Sorting);\r\n\t}\r\n}\r\n","/** An object that contains the data related to the client making search or autosuggest requests. */\r\nexport class ClientData {\r\n\t/** Unique identifier used for tracking visitors. */\r\n\tpublic VisitorId: string;\r\n\r\n\t/** Custom information used for evaluating Visitor Targets. */\r\n\tpublic Custom?: string;\r\n\t/** Client IP used for evaluating Visitor Targets. */\r\n\tpublic HttpTrueClientIp?: string;\r\n\t/** Browser user agent used for evaluating Visitor Targets. */\r\n\tpublic UserAgent?: string;\r\n\r\n\tpublic PreviewBuckets?: number[];\r\n\t/**\r\n\t * The source used for evaluating Visitor Targets. This was previously called 'hawksource' and can\r\n\t * be used to track the source the user came from (i.e. email, instagram, etc).\r\n\t */\r\n\tpublic Source?: string;\r\n}\r\n","export enum ContentType {\r\n\tImage = 'image',\r\n\tWidget = 'widget',\r\n\tFeatured = 'featured',\r\n\tCustom = 'custom',\r\n\tLandingPage = 'landingPage',\r\n}\r\n","import { useEffect } from 'react';\r\nimport axios, { CancelToken } from 'axios';\r\n\r\nimport { SearchStore, FacetSelectionState } from './Store';\r\nimport HawkClient from 'net/HawkClient';\r\nimport { Response, Request, FacetSelections } from 'models/Search';\r\nimport { useMergableState } from 'util/MergableState';\r\nimport { useHawkConfig } from 'components/ConfigProvider';\r\nimport { Facet, Value } from 'models/Facets';\r\nimport { FacetType } from 'models/Facets/FacetType';\r\n\r\nexport interface SearchActor {\r\n\t/**\r\n\t * Performs a search with the currently configured pending search request. The search request can be\r\n\t * configured via the `setSearch` method. This method usually doesn't need to be called directly, as\r\n\t * the `StoreProvider` component will usually trigger searches directly in response to calls to\r\n\t * `setSearch`.\r\n\t * @returns A promise that resolves when the search request has been completed.\r\n\t */\r\n\tsearch(cancellationToken?: CancelToken): Promise<void>;\r\n\r\n\t/**\r\n\t * Configures the next search request that will be executed. This will also execute a search in response to\r\n\t * the next search request changing.\r\n\t * @param search The partial search request object. This will be merged with previous calls to `setSearch`.\r\n\t * @param doHistory Whether or not this search request will push a history entry into the browser. If\r\n\t * \t\t\t\t\tnot specified, the default is `true`.\r\n\t */\r\n\tsetSearch(search: Partial<Request>, doHistory?: boolean): void;\r\n\r\n\t/**\r\n\t * Toggles a facet value for the next search request that will be executed. If the given facet had previously\r\n\t * been selected, it will be unselected. If the negation state of a selected facet is changed, the selection\r\n\t * will have its negation state changed. Internally, this will call `setSearch` to configure the next search\r\n\t * with this selected facet.\r\n\t * @param facet The facet for which the value is being selected.\r\n\t * @param facetValue The facet value being selected.\r\n\t * @param negate  Whether or not this selection is considered a negation.\r\n\t */\r\n\ttoggleFacetValue(facet: Facet | string, facetValue: Value | string, negate?: boolean): void;\r\n\r\n\tsetFacetValues(facet: Facet | string, facetValues: Value[] | string[]): void;\r\n\r\n\t/**\r\n\t * Entirely clears all the values of the given facet from the current selection.\r\n\t * @param facet The facet to clear.\r\n\t */\r\n\tclearFacet(facet: Facet | string): void;\r\n\r\n\t/**\r\n\t * Clears a given facet value of the given facet from the current selection.\r\n\t * @param facet The facet to clear.\r\n\t * @param facetValue The facet value to clear.\r\n\t */\r\n\tclearFacetValue(facet: Facet | string, facetValue?: Value | string): void;\r\n\r\n\t/**\r\n\t * Clears all selected facets from the current selection.\r\n\t */\r\n\tclearAllFacets(): void;\r\n}\r\n\r\nexport function useHawkState(initialSearch?: Partial<Request>): [SearchStore, SearchActor] {\r\n\tconst { config } = useHawkConfig();\r\n\r\n\tconst client = new HawkClient(config);\r\n\r\n\tconst [store, setStore] = useMergableState(\r\n\t\tnew SearchStore({\r\n\t\t\tpendingSearch: initialSearch || {\r\n\t\t\t\tFacetSelections: {},\r\n\t\t\t},\r\n\t\t\tisLoading: true,\r\n\t\t}),\r\n\t\tSearchStore\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\t// when the pending search changes, trigger a search\r\n\r\n\t\tconst cts = axios.CancelToken.source();\r\n\t\tsearch(cts.token);\r\n\r\n\t\treturn () => {\r\n\t\t\tcts.cancel();\r\n\t\t};\r\n\t}, [store.pendingSearch]);\r\n\r\n\t/**\r\n\t * Performs a search with the currently configured pending search request. The search request can be\r\n\t * configured via the `setSearch` method. This method usually doesn't need to be called directly, as\r\n\t * the `StoreProvider` component will usually trigger searches directly in response to calls to\r\n\t * `setSearch`.\r\n\t * @returns A promise that resolves when the search request has been completed.\r\n\t */\r\n\tasync function search(cancellationToken?: CancelToken): Promise<void> {\r\n\t\tsetStore({ isLoading: true });\r\n\t\tlet searchResults: Response | null = null;\r\n\r\n\t\ttry {\r\n\t\t\tsearchResults = await client.search(\r\n\t\t\t\t{\r\n\t\t\t\t\t// the search request being executed is spread from the pendingSearch\r\n\t\t\t\t\t...store.pendingSearch,\r\n\t\t\t\t\t// pass parameter for extended response\r\n\t\t\t\t\tIsInPreview: config.isInPreview,\r\n\t\t\t\t\t// and override some of the request fields with config values\r\n\t\t\t\t\tClientGuid: config.clientGuid,\r\n\t\t\t\t},\r\n\t\t\t\tcancellationToken\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tif (axios.isCancel(error)) {\r\n\t\t\t\t// if the request was cancelled, it's because this component was updated\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconsole.error('Search request error:', error);\r\n\t\t}\r\n\r\n\t\tsetStore({ isLoading: false });\r\n\r\n\t\tif (searchResults) {\r\n\t\t\tif (!searchResults.Success) {\r\n\t\t\t\tconsole.error('Search result error:', searchResults);\r\n\t\t\t} else {\r\n\t\t\t\tsetStore({\r\n\t\t\t\t\tsearchResults: new Response(searchResults),\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Configures the next search request that will be executed. This will also execute a search in response to\r\n\t * the next search request changing.\r\n\t * @param search The partial search request object. This will be merged with previous calls to `setSearch`.\r\n\t * @param doHistory Whether or not this search request will push a history entry into the browser. If\r\n\t * \t\t\t\t\tnot specified, the default is `true`.\r\n\t */\r\n\tfunction setSearch(pendingSearch: Partial<Request>, doHistory?: boolean): void {\r\n\t\tif (doHistory === undefined) {\r\n\t\t\tdoHistory = true;\r\n\t\t}\r\n\r\n\t\tsetStore(prevState => {\r\n\t\t\tconst newState = {\r\n\t\t\t\tpendingSearch: { ...prevState.pendingSearch, ...pendingSearch },\r\n\t\t\t\tdoHistory,\r\n\t\t\t};\r\n\t\t\tif (newState.pendingSearch.Keyword === '') {\r\n\t\t\t\tnewState.pendingSearch.Keyword = undefined;\r\n\t\t\t}\r\n\r\n\t\t\treturn newState;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the facet selections and search within configuration for the next search request. This will also\r\n\t * clear the page number of the next request to display the first page of results.\r\n\t * @param selections The facet selections to set.\r\n\t * @param searchWithin The search within value to set.\r\n\t */\r\n\tfunction setSearchSelections(selections?: FacetSelections, searchWithin?: string) {\r\n\t\tsetSearch({\r\n\t\t\tFacetSelections: selections,\r\n\t\t\tSearchWithin: searchWithin,\r\n\r\n\t\t\t// when we change facet selections, also clear the current page so that we navigate\r\n\t\t\t// back to the first page of results\r\n\t\t\tPageNo: undefined,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles a facet value for the next search request that will be executed. Internally, this will call\r\n\t * `setSearch` to configure the next search with this selected facet.\r\n\t * @param facet The facet for which the value is being selected.\r\n\t * @param facetValue The facet value being selected.\r\n\t * @param negate  Whether or not this selection is considered a negation.\r\n\t */\r\n\tfunction toggleFacetValue(facet: Facet | string, facetValue: Value | string, negate?: boolean): void {\r\n\t\tif (negate === undefined) {\r\n\t\t\tnegate = false;\r\n\t\t}\r\n\r\n\t\tconst facetName: string = typeof facet === 'string' ? facet : facet.Name;\r\n\t\tconst facetField = typeof facet === 'string' ? facet : facet.selectionField;\r\n\r\n\t\tconst valueValue = typeof facetValue === 'string' ? facetValue : facetValue.Value;\r\n\t\tconst valueLabel = typeof facetValue === 'string' ? facetValue : facetValue.Label;\r\n\r\n\t\tif (!valueValue) {\r\n\t\t\tconsole.error(`Facet ${facetName} (${facetField}) has no facet value for ${valueLabel}`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet facetSelections = store.pendingSearch.FacetSelections;\r\n\r\n\t\t// handle `searchWithin` facet, which isn't a facet selection but is instead a field on the\r\n\t\t// search request.\r\n\t\tif (facetField === 'searchWithin') {\r\n\t\t\t// set the search within to the facet value provided\r\n\t\t\tsetSearchSelections(facetSelections, /* searchWithin */ valueValue);\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!facetSelections) {\r\n\t\t\tfacetSelections = {};\r\n\t\t}\r\n\r\n\t\tif (!facetSelections[facetField]) {\r\n\t\t\tfacetSelections[facetField] = [];\r\n\t\t}\r\n\r\n\t\tconst { state: selState, selectionIndex } = store.isFacetSelected(facet, facetValue);\r\n\r\n\t\tif (selState === FacetSelectionState.Selected || selState === FacetSelectionState.Negated) {\r\n\t\t\t// we're selecting this facet, and it's already selected\r\n\r\n\t\t\t// first, remove it from our selections\r\n\t\t\tfacetSelections[facetField]!.splice(selectionIndex!, 1);\r\n\r\n\t\t\tif (\r\n\t\t\t\t(selState === FacetSelectionState.Selected && negate) ||\r\n\t\t\t\t(selState === FacetSelectionState.Negated && !negate)\r\n\t\t\t) {\r\n\t\t\t\t// if we're toggling from negation to non-negation or vice versa, then push the new selection\r\n\t\t\t\tfacetSelections[facetField]!.push(negate ? `-${valueValue}` : valueValue);\r\n\t\t\t} else {\r\n\t\t\t\t// if we're not toggling the negation, nothing to do because we already removed the selection above\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// not selected, so we want to select it\r\n\t\t\tfacetSelections[facetField]!.push(negate ? `-${valueValue}` : valueValue);\r\n\t\t}\r\n\r\n\t\tif (facetSelections[facetField]!.length === 0) {\r\n\t\t\t// clean up any facets that no longer have any selected facet values\r\n\t\t\tdelete facetSelections[facetField];\r\n\t\t}\r\n\r\n\t\tsetSearchSelections(facetSelections, store.pendingSearch.SearchWithin);\r\n\t}\r\n\r\n\tfunction setFacetValues(facet: Facet | string, facetValues: Value[] | string[]): void {\r\n\t\tconst facetName = typeof facet === 'string' ? facet : facet.Name;\r\n\t\tconst facetField = typeof facet === 'string' ? facet : facet.selectionField;\r\n\r\n\t\tlet facetSelections = store.pendingSearch.FacetSelections;\r\n\r\n\t\tif (!facetSelections) {\r\n\t\t\tfacetSelections = {};\r\n\t\t}\r\n\r\n\t\tfacetSelections[facetField] = [];\r\n\r\n\t\tfor (const facetValue of facetValues) {\r\n\t\t\tconst valueValue = typeof facetValue === 'string' ? facetValue : facetValue.Value;\r\n\t\t\tconst valueLabel = typeof facetValue === 'string' ? facetValue : facetValue.Label;\r\n\r\n\t\t\tif (!valueValue) {\r\n\t\t\t\tconsole.error(`Facet ${facetName} (${facetField}) has no facet value for ${valueLabel}`);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfacetSelections[facetField]!.push(valueValue);\r\n\t\t}\r\n\r\n\t\tsetSearchSelections(facetSelections, store.pendingSearch.SearchWithin);\r\n\t}\r\n\r\n\t/**\r\n\t * Entirely clears all the values of the given facet from the current selection.\r\n\t * @param facet The facet to clear.\r\n\t */\r\n\tfunction clearFacet(facet: Facet | string) {\r\n\t\tconst facetField = typeof facet === 'string' ? facet : facet.selectionField;\r\n\r\n\t\tconst facetSelections = store.pendingSearch.FacetSelections;\r\n\r\n\t\t// handle `searchWithin` facet, which isn't a facet selection but is instead a field on the\r\n\t\t// search request.\r\n\t\tif (facetField === 'searchWithin') {\r\n\t\t\t// set searchWithin to undefined to clear it\r\n\t\t\tsetSearchSelections(facetSelections, /* searchWithin */ undefined);\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!facetSelections || !facetSelections[facetField]) {\r\n\t\t\t// if there are no facet selections or the facet isn't selected at all, there's nothing to clear\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tdelete facetSelections[facetField];\r\n\r\n\t\tsetSearchSelections(facetSelections, store.pendingSearch.SearchWithin);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears a given facet value of the given facet from the current selection.\r\n\t * @param facet The facet to clear.\r\n\t * @param facetValue The facet value to clear.\r\n\t */\r\n\tfunction clearFacetValue(facet: Facet | string, facetValue: Value | string) {\r\n\t\tconst facetName = typeof facet === 'string' ? facet : facet.Name;\r\n\t\tconst facetField = typeof facet === 'string' ? facet : facet.selectionField;\r\n\r\n\t\tconst valueValue = typeof facetValue === 'string' ? facetValue : facetValue.Value;\r\n\t\tconst valueLabel = typeof facetValue === 'string' ? facetValue : facetValue.Label;\r\n\r\n\t\tif (!valueValue) {\r\n\t\t\tconsole.error(`Facet ${facetName} (${facetField}) has no facet value for ${valueLabel}`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// handle `searchWithin` facet, which isn't a facet selection but is instead a field on the\r\n\t\t// search request.\r\n\t\tif (facetField === 'searchWithin') {\r\n\t\t\t// set searchWithin to undefined to clear it\r\n\t\t\tsetSearchSelections(store.pendingSearch.FacetSelections, /* searchWithin */ undefined);\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst { state: selState, selectionIndex } = store.isFacetSelected(facet, facetValue);\r\n\r\n\t\tif (selState === FacetSelectionState.NotSelected) {\r\n\t\t\t// if there are no facet selections or the facet isn't selected at all, there's nothing to clear\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst facetSelections = store.pendingSearch.FacetSelections!;\r\n\r\n\t\t// remove it from the selections\r\n\t\tfacetSelections[facetField]!.splice(selectionIndex!, 1);\r\n\r\n\t\tif (facetSelections[facetField]!.length === 0) {\r\n\t\t\t// clean up any facets that no longer have any selected facet values\r\n\t\t\tdelete facetSelections[facetField];\r\n\t\t}\r\n\r\n\t\tsetSearchSelections(facetSelections, store.pendingSearch.SearchWithin);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all selected facets from the current selection.\r\n\t */\r\n\tfunction clearAllFacets(): void {\r\n\t\tsetSearchSelections(undefined, undefined);\r\n\t}\r\n\r\n\tconst actor: SearchActor = {\r\n\t\tsearch,\r\n\t\tsetSearch,\r\n\t\ttoggleFacetValue,\r\n\t\tsetFacetValues,\r\n\t\tclearFacet,\r\n\t\tclearFacetValue,\r\n\t\tclearAllFacets,\r\n\t};\r\n\r\n\treturn [store, actor];\r\n}\r\n","import { useState, Dispatch } from 'react';\r\n\r\ntype SetStateAction<T> = Partial<T> | ((prevState: T) => Partial<T>);\r\n\r\nexport function useMergableState<T>(\r\n\tinitialValue: T,\r\n\ttypeConstructor: new (init: Partial<T>) => T\r\n): [T, Dispatch<SetStateAction<T>>] {\r\n\tconst [state, setState] = useState(new typeConstructor(initialValue));\r\n\r\n\tfunction setStateAndMerge(value: SetStateAction<T>) {\r\n\t\tif (typeof value === 'function') {\r\n\t\t\t// if we're being passed a function, we're setting state in the form of setState(prevState => ...).\r\n\r\n\t\t\tsetState(prevState => {\r\n\t\t\t\t// so we derive the new state from the previous state\r\n\t\t\t\tconst newState = value(prevState);\r\n\r\n\t\t\t\t// and then set the new merged state\r\n\t\t\t\treturn new typeConstructor({ ...prevState, ...newState });\r\n\t\t\t});\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// otherwise, the new state was simply passed in\r\n\t\tsetState(prevState => {\r\n\t\t\t// merge state together and set it\r\n\t\t\treturn new typeConstructor({ ...prevState, ...value });\r\n\t\t});\r\n\t}\r\n\r\n\treturn [state, setStateAndMerge];\r\n}\r\n","import React, { useContext } from 'react';\r\n\r\nimport { SearchStore } from 'store/Store';\r\nimport { useHawkState, SearchActor } from 'store/HawkState';\r\nimport { Request } from 'models/Search';\r\n\r\nconst HawkContext = React.createContext({} as HawkContextValue);\r\n\r\nexport interface HawkContextValue {\r\n\t/** The store of data used throughout the application. */\r\n\tstore: SearchStore;\r\n\t/**\r\n\t * An interface that allows actions to be performed on the store (such as executing searches,\r\n\t * changing pages, etc).\r\n\t */\r\n\tactor: SearchActor;\r\n}\r\n\r\nexport interface HawkStoreProviderProps {\r\n\t/** The initial search to perform when initializing the search components. */\r\n\tinitialSearch?: Partial<Request>;\r\n\tchildren: React.ReactNode;\r\n}\r\n\r\n/**\r\n * This component acts as the global store for the hawksearch application state. Only one instance of this component\r\n * should exist, and it should be the root level component.\r\n */\r\nfunction StoreProvider({ initialSearch, children }: HawkStoreProviderProps) {\r\n\tconst [store, actor] = useHawkState(initialSearch);\r\n\r\n\treturn <HawkContext.Provider value={{ store, actor }}>{children}</HawkContext.Provider>;\r\n}\r\n\r\n/**\r\n * Retrieves the global hawk store for use within a component.\r\n */\r\nexport function useHawkSearch() {\r\n\treturn useContext(HawkContext);\r\n}\r\n\r\nexport default StoreProvider;\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();\r\n","import { Request } from 'models/Search/Request';\r\n\r\n/** Represents parts of the browser query string that are fixed and are always single strings. */\r\ninterface ParsedQueryStringFixed {\r\n\tkeyword?: string;\r\n\tsort?: string;\r\n\tpg?: string;\r\n\tlp?: string;\r\n\tPageId?: string;\r\n\tlpurl?: string;\r\n\tmpp?: string;\r\n\tsearchWithin?: string;\r\n\tis100Coverage?: string;\r\n}\r\n\r\n/**\r\n * Represents the parts of the browser query string that are dynamic (the selected facets). Facets\r\n * can have multiple values, so the value of these is always an array of strings.\r\n */\r\ninterface ParsedQueryStringDynamic {\r\n\t[key: string]: string[];\r\n}\r\n\r\ntype ParsedQueryString = ParsedQueryStringFixed & ParsedQueryStringDynamic;\r\n\r\n/**\r\n * Parses the input query string and returns an object that can be used to build a search request.\r\n * The object returned will usually have the keys: `keyword`, `sort`, `pg`,`lp`,`lpurl`, `mpp`, and then more keys\r\n * for every selected facet.\r\n * @param search The input query string.\r\n */\r\nfunction parseQueryStringToObject(search: string) {\r\n\tconst params = new URLSearchParams(search);\r\n\r\n\tconst parsed: ParsedQueryString = {};\r\n\r\n\tparams.forEach((value, key) => {\r\n\t\tif (\r\n\t\t\tkey === 'keyword' ||\r\n\t\t\tkey === 'sort' ||\r\n\t\t\tkey === 'pg' ||\r\n\t\t\tkey === 'lp' ||\r\n\t\t\tkey === 'PageId' ||\r\n\t\t\tkey === 'lpurl' ||\r\n\t\t\tkey === 'mpp' ||\r\n\t\t\tkey === 'searchWithin' ||\r\n\t\t\tkey === 'is100Coverage'\r\n\t\t) {\r\n\t\t\t// `keyword` is special and should never be turned into an array\r\n\t\t\tparsed[key] = value;\r\n\t\t} else {\r\n\t\t\t// everything else should be turned into an array\r\n\r\n\t\t\tif (!value) {\r\n\t\t\t\t// no useful value for this query param, so skip it\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// multiple selections are split by commas, so split into an array\r\n\t\t\tconst multipleValues = value.split(',');\r\n\r\n\t\t\t// and now handle any comma escaping - any single value that contained a comma is escaped to '::'\r\n\t\t\tfor (let x = 0; x < multipleValues.length; ++x) {\r\n\t\t\t\tmultipleValues[x] = multipleValues[x].replace('::', ',');\r\n\t\t\t}\r\n\r\n\t\t\tparsed[key] = multipleValues;\r\n\t\t}\r\n\t});\r\n\r\n\treturn parsed;\r\n}\r\n\r\n/**\r\n * Parses the abosulte url into a `HawkClient` client search request object.\r\n * @param location The input location\r\n */\r\nexport function parseLocation(location: Location, searchUrl: string = '/search'): Partial<Request> {\r\n\tconst searchRequest = parseSearchQueryString(location.search);\r\n\r\n\t// customUrl have priority over keywords\r\n\tif (checkIfUrlRefsLandingPage(location.pathname, searchUrl)) {\r\n\t\tsearchRequest.Keyword = undefined;\r\n\t\tsearchRequest.CustomUrl = location.pathname.replace(searchUrl, '');\r\n\t}\r\n\treturn searchRequest;\r\n}\r\n/**\r\n * Parses the input query string into a `HawkClient` client search request object.\r\n * @param search The input query string.\r\n */\r\nexport function parseSearchQueryString(search: string): Partial<Request> {\r\n\tconst queryObj = parseQueryStringToObject(search);\r\n\r\n\t// extract out components, including facet selections\r\n\tconst { keyword, sort, pg, mpp, lp, PageId, lpurl, searchWithin, is100Coverage, ...facetSelections } = queryObj;\r\n\r\n\t// ignore landing pages if keyword is passed\r\n\tconst pageId = lp || PageId;\r\n\treturn {\r\n\t\tKeyword: lpurl || pageId ? '' : keyword,\r\n\r\n\t\tSortBy: sort,\r\n\t\tPageNo: pg ? Number(pg) : undefined,\r\n\t\tMaxPerPage: mpp ? Number(mpp) : undefined,\r\n\t\tPageId: pageId ? Number(pageId) : undefined,\r\n\t\tCustomUrl: lpurl,\r\n\t\tSearchWithin: searchWithin,\r\n\t\tIs100CoverageTurnedOn: is100Coverage ? Boolean(is100Coverage) : undefined,\r\n\t\tFacetSelections: facetSelections,\r\n\t};\r\n}\r\n\r\nexport function checkIfUrlRefsLandingPage(path: string, searchUrl: string): boolean {\r\n\tif (!path) {\r\n\t\t// if there's no path, this request can't be for a landing page\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif (!path.endsWith('/')) {\r\n\t\tpath = path + '/';\r\n\t}\r\n\r\n\tif (!searchUrl.endsWith('/')) {\r\n\t\tsearchUrl = searchUrl + '/';\r\n\t}\r\n\r\n\treturn path !== searchUrl;\r\n}\r\n\r\n/**\r\n * Converts a search query object (such as one returned from `parseSearchQueryString`) and converts\r\n * it into a browser query string\r\n * @param queryObj The query object to convert to a query string.\r\n */\r\nfunction convertObjectToQueryString(queryObj: ParsedQueryString) {\r\n\tconst queryStringValues: string[] = [];\r\n\r\n\tfor (const key in queryObj) {\r\n\t\tif (queryObj.hasOwnProperty(key)) {\r\n\t\t\tif (\r\n\t\t\t\tkey === 'keyword' ||\r\n\t\t\t\tkey === 'sort' ||\r\n\t\t\t\tkey === 'pg' ||\r\n\t\t\t\tkey === 'mpp' ||\r\n\t\t\t\tkey === 'searchWithin' ||\r\n\t\t\t\tkey === 'is100Coverage'\r\n\t\t\t) {\r\n\t\t\t\tconst value = queryObj[key];\r\n\r\n\t\t\t\tif (value === undefined || value === null) {\r\n\t\t\t\t\t// if any of the special keys just aren't defined or are null, don't include them in\r\n\t\t\t\t\t// the query string\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (typeof value !== 'string') {\r\n\t\t\t\t\tthrow new Error(`${key} must be a string`);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// certain strings are special and are never arrays\r\n\t\t\t\tqueryStringValues.push(key + '=' + value);\r\n\t\t\t} else {\r\n\t\t\t\tconst values = queryObj[key];\r\n\r\n\t\t\t\t// handle comma escaping - if any of the values contains a comma, they need to be escaped first\r\n\t\t\t\tconst escapedValues: string[] = [];\r\n\r\n\t\t\t\tfor (const unescapedValue of values) {\r\n\t\t\t\t\tescapedValues.push(unescapedValue.replace(',', '::'));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tqueryStringValues.push(key + '=' + escapedValues.join(','));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn '?' + queryStringValues.join('&');\r\n}\r\n\r\n/**\r\n * Converts a partial search request object into a browser query string.\r\n * @param searchRequest The search request object to convert.\r\n */\r\nexport function getSearchQueryString(searchRequest: Partial<Request>) {\r\n\tconst searchQuery = {\r\n\t\tkeyword: searchRequest.Keyword,\r\n\r\n\t\tsort: searchRequest.SortBy,\r\n\t\tpg: searchRequest.PageNo ? String(searchRequest.PageNo) : undefined,\r\n\t\tmpp: searchRequest.MaxPerPage ? String(searchRequest.MaxPerPage) : undefined,\r\n\t\tis100Coverage: searchRequest.Is100CoverageTurnedOn ? String(searchRequest.Is100CoverageTurnedOn) : undefined,\r\n\t\tsearchWithin: searchRequest.SearchWithin,\r\n\r\n\t\t...searchRequest.FacetSelections,\r\n\t} as ParsedQueryString;\r\n\r\n\treturn convertObjectToQueryString(searchQuery);\r\n}\r\n","import { useEffect } from 'react';\r\n\r\nimport { useHawkSearch } from './StoreProvider';\r\nimport { history } from 'util/History';\r\nimport { parseSearchQueryString, getSearchQueryString } from 'util/QueryString';\r\n\r\nlet doSearch = true;\r\n\r\nfunction QueryStringListener() {\r\n\tconst { store, actor } = useHawkSearch();\r\n\r\n\tuseEffect(() => {\r\n\t\t// listen to history so that when we navigate backward/forward, trigger a new search based off\r\n\t\t// the new query string\r\n\t\tconst unlisten = history.listen(location => {\r\n\t\t\tif (!doSearch) {\r\n\t\t\t\t// if the previous history change specified that we shouldn't do a search, clear the flag and bail\r\n\t\t\t\tdoSearch = true;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst searchRequest = parseSearchQueryString(location.search);\r\n\r\n\t\t\tactor.setSearch(\r\n\t\t\t\tsearchRequest,\r\n\t\t\t\t// explicitly flag this next search as not needing to push additional history, since this search\r\n\t\t\t\t// _is_ the result of history.\r\n\t\t\t\t/*doHistory*/ false\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\treturn () => {\r\n\t\t\tunlisten();\r\n\t\t};\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\t// listen to changes in the pending search so that history records can be pushed to the browser's\r\n\t\t// query string\r\n\r\n\t\tif (store.doHistory) {\r\n\t\t\t// if we're pushing history, we don't want to to trigger a search as a result of this history\r\n\t\t\t// change\r\n\t\t\tdoSearch = false;\r\n\r\n\t\t\thistory.push({\r\n\t\t\t\tsearch: getSearchQueryString(store.pendingSearch),\r\n\t\t\t});\r\n\t\t}\r\n\t}, [store.pendingSearch]);\r\n\r\n\treturn null;\r\n}\r\n\r\nexport default QueryStringListener;\r\n","import React from 'react';\r\nimport { ControllerStateAndHelpers } from 'downshift';\r\n\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\nimport SearchBoxBase from 'components/ui/SearchBox/SearchBoxBase';\r\nimport { Product } from 'models/Autocomplete';\r\n\r\n/**\r\n * This component is the search input box (with autosuggest) that should be utilized on search pages. For a simple\r\n * search input box that is meant to be used on non-search pages (or globally), see `GlobalSearchBox`.\r\n */\r\nfunction SearchBox() {\r\n\tconst { store, actor } = useHawkSearch();\r\n\r\n\tfunction handleSubmit(event: React.KeyboardEvent<HTMLInputElement>, downshift: ControllerStateAndHelpers<Product>) {\r\n\t\tif (event.key === 'Enter') {\r\n\t\t\tactor.setSearch({\r\n\t\t\t\tPageId: undefined,\r\n\t\t\t\tCustomUrl: undefined,\r\n\t\t\t\tKeyword: event.currentTarget.value,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"hawk__searchBox\">\r\n\t\t\t<SearchBoxBase\r\n\t\t\t\tinitialValue={store && store.pendingSearch ? store.pendingSearch.Keyword : ''}\r\n\t\t\t\tonSubmit={handleSubmit}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;\r\n","import * as React from 'react';\r\n\r\ninterface PlusSVGProps {\r\n\tclass?: string;\r\n}\r\n\r\n/**\r\n * Plus SVG\r\n *\r\n * @returns\r\n */\r\nfunction PlusSVG(props: PlusSVGProps) {\r\n\treturn (\r\n\t\t<svg viewBox=\"0 0 32 32\" className={'icon ' + props.class} focusable=\"false\" aria-hidden=\"true\">\r\n\t\t\t<path d=\"M31 12h-11v-11c0-0.552-0.448-1-1-1h-6c-0.552 0-1 0.448-1 1v11h-11c-0.552 0-1 0.448-1 1v6c0 0.552 0.448 1 1 1h11v11c0 0.552 0.448 1 1 1h6c0.552 0 1-0.448 1-1v-11h11c0.552 0 1-0.448 1-1v-6c0-0.552-0.448-1-1-1z\" />\r\n\t\t</svg>\r\n\t);\r\n}\r\n\r\nexport default PlusSVG;\r\n","import * as React from 'react';\r\n\r\ninterface MinusSVGProps {\r\n\tclass?: string;\r\n}\r\n\r\n/**\r\n * Minus SVG\r\n *\r\n * @returns\r\n */\r\nfunction MinusSVG(props: MinusSVGProps) {\r\n\treturn (\r\n\t\t<svg viewBox=\"0 0 32 32\" className={'icon ' + props.class} focusable=\"false\" aria-hidden=\"true\">\r\n\t\t\t<path d=\"M0 13v6c0 0.552 0.448 1 1 1h30c0.552 0 1-0.448 1-1v-6c0-0.552-0.448-1-1-1h-30c-0.552 0-1 0.448-1 1z\" />\r\n\t\t</svg>\r\n\t);\r\n}\r\n\r\nexport default MinusSVG;\r\n","import * as React from 'react';\r\n\r\ninterface QuestionmarkSVGProps {\r\n\tclass: string;\r\n}\r\n\r\n/**\r\n * Questionmark SVG\r\n *\r\n * @returns\r\n */\r\nfunction QuestionmarkSVG(props: QuestionmarkSVGProps) {\r\n\treturn (\r\n\t\t<svg viewBox=\"0 0 32 32\" className={'icon ' + props.class} focusable=\"false\" aria-hidden=\"true\">\r\n\t\t\t<path d=\"M 10.976562 14.785156 C 10.976562 15.324219 10.539062 15.761719 10 15.761719 C 9.460938 15.761719 9.023438 15.324219 9.023438 14.785156 C 9.023438 14.246094 9.460938 13.808594 10 13.808594 C 10.539062 13.808594 10.976562 14.246094 10.976562 14.785156 Z M 10.976562 14.785156 \" />\r\n\t\t\t<path d=\"M 10 0 C 4.472656 0 0 4.472656 0 10 C 0 15.527344 4.472656 20 10 20 C 15.527344 20 20 15.527344 20 10 C 20 4.472656 15.527344 0 10 0 Z M 10 18.4375 C 5.335938 18.4375 1.5625 14.664062 1.5625 10 C 1.5625 5.335938 5.335938 1.5625 10 1.5625 C 14.664062 1.5625 18.4375 5.335938 18.4375 10 C 18.4375 14.664062 14.664062 18.4375 10 18.4375 Z M 10 18.4375 \" />\r\n\t\t\t<path d=\"M 10 5.019531 C 8.277344 5.019531 6.875 6.421875 6.875 8.144531 C 6.875 8.574219 7.226562 8.925781 7.65625 8.925781 C 8.085938 8.925781 8.4375 8.574219 8.4375 8.144531 C 8.4375 7.28125 9.136719 6.582031 10 6.582031 C 10.863281 6.582031 11.5625 7.28125 11.5625 8.144531 C 11.5625 9.007812 10.863281 9.707031 10 9.707031 C 9.570312 9.707031 9.21875 10.058594 9.21875 10.488281 L 9.21875 12.441406 C 9.21875 12.871094 9.570312 13.222656 10 13.222656 C 10.429688 13.222656 10.78125 12.871094 10.78125 12.441406 L 10.78125 11.171875 C 12.128906 10.824219 13.125 9.597656 13.125 8.144531 C 13.125 6.421875 11.722656 5.019531 10 5.019531 Z M 10 5.019531 \" />\r\n\t\t</svg>\r\n\t);\r\n}\r\n\r\nexport default QuestionmarkSVG;\r\n","import React, { useContext, useState } from 'react';\r\n\r\nimport { Facet as FacetModel, Value } from 'models/Facets';\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\nimport PlusSVG from 'components/svg/PlusSVG';\r\nimport MinusSVG from 'components/svg/MinusSVG';\r\nimport QuestionmarkSVG from 'components/svg/QuestionmarkSVG';\r\n\r\nconst FacetContext = React.createContext({} as FacetContextValue);\r\n\r\nexport interface FacetProps {\r\n\tfacet: FacetModel;\r\n\tchildren: React.ReactNode;\r\n}\r\n\r\ninterface FacetContextValue {\r\n\t/** The facet model returned from the server for this facet. */\r\n\tfacet: FacetModel;\r\n\r\n\t/** Returns the state of the parent facet container. */\r\n\tstate: FacetState;\r\n\r\n\t/** An actor interface to perform actions for this facet. */\r\n\tactor: FacetActor;\r\n\r\n\trenderer: FacetRenderer;\r\n}\r\n\r\nexport interface FacetState {\r\n\t/**\r\n\t * An array of facet values for this facet. If this facet has a quick lookup search bar, this list\r\n\t * will be filtered by this quick lookup.\r\n\t */\r\n\tfacetValues: Value[];\r\n\r\n\t/**\r\n\t * If the facet is configured for filtering, this is the user's entered filter value. Updated on\r\n\t * immediately when the user types.\r\n\t */\r\n\tfilter: string;\r\n\r\n\t/** Whether or not this facet has its values truncated. */\r\n\tisTruncated: boolean;\r\n\t/** Whether or not this facet is collapsed. */\r\n\tisCollapsed: boolean;\r\n\t/** If filter is enabled, contains the number of facets that are truncated. */\r\n\tremainingFacets: number;\r\n\r\n\t// It shows the decimal count in slider\r\n\tdecimalPrecision: number;\r\n}\r\n\r\nexport interface FacetActor {\r\n\t/** Select the given facet value. */\r\n\tselectFacet(facetValue: Value | string): void;\r\n\t/** Selects and negates the given facet value. */\r\n\tnegateFacet(facetValue: Value | string): void;\r\n\r\n\t/** Sets the selected facet values by replacing existing selections for this facet.  */\r\n\tsetFacets(facetValues: Value[] | string[]): void;\r\n\r\n\t/** Sets the filter for this facet container. */\r\n\tsetFilter(filter: string): void;\r\n\r\n\t/** Sets whether or not this facet is currently being truncated. */\r\n\tsetTruncated(truncated: boolean): void;\r\n\t/** Sets whether or not this facet is currently collapsed. */\r\n\tsetCollapsed(collapsed: boolean): void;\r\n}\r\n\r\nexport interface FacetRenderer {\r\n\t/**\r\n\t * Conditionally renders the default truncation UI (the \"Show More\"/\"Show Less\" buttons). Nothing will render\r\n\t * if the facet is configured to not be truncated.\r\n\t */\r\n\trenderTruncation();\r\n}\r\n\r\nfunction Facet({ facet, children }: FacetProps) {\r\n\tconst { actor: searchActor } = useHawkSearch();\r\n\r\n\tconst [filter, setFilter] = useState('');\r\n\tconst [isTruncated, setTruncated] = useState(facet.shouldTruncate);\r\n\tconst [isCollapsed, setCollapsed] = useState(facet.IsCollapsible && facet.IsCollapsedDefault);\r\n\r\n\tfunction selectFacet(facetValue: Value | string): void {\r\n\t\tsetFilter('');\r\n\t\tsearchActor.toggleFacetValue(facet, facetValue);\r\n\t}\r\n\r\n\tfunction setFacets(values: Value[] | string[]): void {\r\n\t\tsetFilter('');\r\n\t\tsearchActor.setFacetValues(facet, values);\r\n\t}\r\n\r\n\tfunction negateFacet(facetValue: Value | string): void {\r\n\t\tsetFilter('');\r\n\t\tsearchActor.toggleFacetValue(facet, facetValue, /* negate */ true);\r\n\t}\r\n\r\n\tfunction renderTruncation() {\r\n\t\t// only show the toggle button if the facet is configured for truncation and we're not filtering\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{facet.shouldTruncate && !filter && (\r\n\t\t\t\t\t<button onClick={() => actor.setTruncated(!isTruncated)} className=\"hawk-facet-rail__show-more-btn\">\r\n\t\t\t\t\t\t{isTruncated ? `(+) Show ${remainingFacets} More` : '(-) Show Less'}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\t// TODO: sort facet values\r\n\tlet facetValues = facet.Values;\r\n\r\n\t// first, perform any filtering if enabled and a filter has been typed in\r\n\tif (facet.shouldSearch && filter) {\r\n\t\tfacetValues = facet.Values.filter(val => {\r\n\t\t\tif (!val.Label) {\r\n\t\t\t\t// if a facet value doesn't have a label, we can't really filter down to it\r\n\t\t\t\t// so exclude it\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn val.Label.toLowerCase().indexOf(filter.toLowerCase()) !== -1;\r\n\t\t});\r\n\t}\r\n\r\n\t// next, handle truncation\r\n\tlet remainingFacets = 0;\r\n\r\n\tif (facet.shouldTruncate && isTruncated) {\r\n\t\tconst valuesBeforeTrunc = facetValues.length;\r\n\r\n\t\tfacetValues = facetValues.slice(0, facet.TruncateThreshold);\r\n\r\n\t\tremainingFacets = valuesBeforeTrunc - facet.TruncateThreshold;\r\n\t}\r\n\r\n\tconst actor: FacetActor = {\r\n\t\tselectFacet,\r\n\t\tnegateFacet,\r\n\r\n\t\tsetFacets,\r\n\r\n\t\tsetFilter,\r\n\r\n\t\tsetTruncated,\r\n\t\tsetCollapsed,\r\n\t};\r\n\r\n\tconst state: FacetState = {\r\n\t\tfacetValues,\r\n\r\n\t\tfilter,\r\n\r\n\t\tisTruncated,\r\n\t\tisCollapsed,\r\n\t\tremainingFacets,\r\n\t\tdecimalPrecision: 2,\r\n\t};\r\n\r\n\tconst renderer: FacetRenderer = {\r\n\t\trenderTruncation,\r\n\t};\r\n\r\n\treturn (\r\n\t\t<FacetContext.Provider value={{ facet, state, actor, renderer }}>\r\n\t\t\t<div className=\"hawk-facet-rail__facet\">\r\n\t\t\t\t<div className=\"hawk-facet-rail__facet-heading\" onClick={() => setCollapsed(!isCollapsed)}>\r\n\t\t\t\t\t<h4>{facet.Name}</h4>\r\n\t\t\t\t\t{facet.Tooltip && (\r\n\t\t\t\t\t\t<div className=\"custom-tooltip\">\r\n\t\t\t\t\t\t\t<QuestionmarkSVG class=\"hawk-questionmark\" />\r\n\t\t\t\t\t\t\t<div className=\"right\">\r\n\t\t\t\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: facet.Tooltip }} />\r\n\t\t\t\t\t\t\t\t<i />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{isCollapsed ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<PlusSVG /> <span className=\"visually-hidden\">Expand facet category</span>{' '}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<MinusSVG /> <span className=\"visually-hidden\">Collapse facet category</span>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{!isCollapsed && (\r\n\t\t\t\t\t<div className=\"hawk-facet-rail__facet-body\">\r\n\t\t\t\t\t\t{facet.shouldSearch && (\r\n\t\t\t\t\t\t\t<div className=\"hawk-facet-rail__facet__quick-lookup\">\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tvalue={filter}\r\n\t\t\t\t\t\t\t\t\tonChange={e => setFilter(e.currentTarget.value)}\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Quick Lookup\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{/* render listing component */}\r\n\t\t\t\t\t\t{children}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</FacetContext.Provider>\r\n\t);\r\n}\r\n\r\nexport function useFacet() {\r\n\treturn useContext(FacetContext);\r\n}\r\n\r\nexport default Facet;\r\n","import React, { useState } from 'react';\r\n\r\nfunction PlaceholderFacetValue() {\r\n\tconst [width] = useState(Math.round(Math.random() * (200 - 100) + 100));\r\n\r\n\treturn (\r\n\t\t<li className=\"hawk-facet-rail__facet-list-item\">\r\n\t\t\t<span className=\"hawk-facet-rail__facet-checkbox hawk-facet-rail__facet-checkbox-placeholder\" />\r\n\r\n\t\t\t<button className=\"hawk-facet-rail__facet-btn\">\r\n\t\t\t\t<span className=\"hawk-facet-rail__facet-name\">\r\n\t\t\t\t\t<div className=\"hawk-facet-rail__facet-name-placeholder\" style={{ width: `${width}px` }} />\r\n\t\t\t\t</span>\r\n\t\t\t</button>\r\n\t\t</li>\r\n\t);\r\n}\r\n\r\nexport default PlaceholderFacetValue;\r\n","import React, { useState } from 'react';\r\n\r\nimport PlaceholderFacetValue from './PlaceholderFacetValue';\r\n\r\nfunction PlaceholderFacet() {\r\n\tconst [width] = useState(Math.round(Math.random() * (250 - 125) + 125));\r\n\tconst [numValues] = useState(Math.round(Math.random() * (8 - 1) + 1));\r\n\r\n\treturn (\r\n\t\t<div className=\"hawk-facet-rail__facet\">\r\n\t\t\t<div className=\"hawk-facet-rail__facet-heading\">\r\n\t\t\t\t<div className=\"hawk-facet-rail__facet-heading-placeholder\" style={{ width: `${width}px` }} />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"hawk-facet-rail__facet-body\">\r\n\t\t\t\t<div className=\"hawk-facet-rail__facet-values hawk-facet-rail__facet-values-placeholder\">\r\n\t\t\t\t\t<div className=\"hawk-facet-rail__facet-values-checkbox\">\r\n\t\t\t\t\t\t<ul className=\"hawk-facet-rail__facet-list\">\r\n\t\t\t\t\t\t\t{[...Array(numValues)].map((_, i) => (\r\n\t\t\t\t\t\t\t\t<PlaceholderFacetValue key={i} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default PlaceholderFacet;\r\n","import * as React from 'react';\r\n\r\ninterface DashCircleSVGProps {\r\n\tclass?: string;\r\n}\r\n\r\n/**\r\n * Dash circle SVG\r\n *\r\n * @returns\r\n */\r\nfunction DashCircleSVG(props: DashCircleSVGProps) {\r\n\treturn (\r\n\t\t<svg\r\n\t\t\tviewBox=\"0 0 32 32\"\r\n\t\t\tclassName={'icon icon-help-header ' + props.class}\r\n\t\t\tfocusable=\"false\"\r\n\t\t\taria-hidden=\"true\"\r\n\t\t>\r\n\t\t\t<path\r\n\t\t\t\tfill=\"#5c5c5c\"\r\n\t\t\t\td=\"M16 0c8.837 0 16 7.163 16 16s-7.163 16-16 16c-8.837 0-16-7.163-16-16v0c0-8.837 7.163-16 16-16v0z\"\r\n\t\t\t/>\r\n\t\t\t<path\r\n\t\t\t\tfill=\"#fff\"\r\n\t\t\t\td=\"M21.51 17.594h-11.733c-0.884 0-1.6-0.716-1.6-1.6s0.716-1.6 1.6-1.6h11.733c0.884 0 1.6 0.716 1.6 1.6s-0.716 1.6-1.6 1.6z\"\r\n\t\t\t/>\r\n\t\t</svg>\r\n\t);\r\n}\r\n\r\nexport default DashCircleSVG;\r\n","import * as React from 'react';\r\n\r\ninterface CheckmarkSVGProps {\r\n\tclass: string;\r\n}\r\n\r\n/**\r\n * Checkmark SVG\r\n *\r\n * @returns\r\n */\r\nfunction CheckmarkSVG(props: CheckmarkSVGProps) {\r\n\treturn (\r\n\t\t<svg viewBox=\"0 0 32 32\" className={'icon ' + props.class} focusable=\"false\" aria-hidden=\"true\">\r\n\t\t\t<path d=\"M27 4l-15 15-7-7-5 5 12 12 20-20z\" />\r\n\t\t</svg>\r\n\t);\r\n}\r\n\r\nexport default CheckmarkSVG;\r\n","import * as React from 'react';\r\n\r\ninterface PlusCircleSVGProps {\r\n\tclass: string;\r\n}\r\n\r\n/**\r\n * Plus SVG\r\n *\r\n * @returns\r\n */\r\nfunction PlusCircleSVG(props: PlusCircleSVGProps) {\r\n\treturn (\r\n\t\t<svg viewBox=\"0 0 20 20\" className={'icon ' + props.class} focusable=\"false\" aria-hidden=\"true\">\r\n\t\t\t<path d=\"M11 9v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zM10 20c-5.523 0-10-4.477-10-10s4.477-10 10-10v0c5.523 0 10 4.477 10 10s-4.477 10-10 10v0z\" />\r\n\t\t</svg>\r\n\t);\r\n}\r\n\r\nexport default PlusCircleSVG;\r\n","import React from 'react';\r\n\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\nimport { useFacet } from 'components/ui/Facets/Facet';\r\nimport { FacetSelectionState } from 'store/Store';\r\nimport DashCircleSVG from 'components/svg/DashCircleSVG';\r\nimport CheckmarkSVG from 'components/svg/CheckmarkSVG';\r\nimport PlusCircleSVG from 'components/svg/PlusCircleSVG';\r\nimport { useHawkConfig } from 'components/ConfigProvider';\r\n\r\nfunction Checkbox() {\r\n\tconst { store } = useHawkSearch();\r\n\tconst { config } = useHawkConfig();\r\n\r\n\tconst {\r\n\t\tfacet,\r\n\t\tstate: { facetValues },\r\n\t\tactor,\r\n\t\trenderer,\r\n\t} = useFacet();\r\n\r\n\tfunction renderOptions() {\r\n\t\tif (facet.FieldType === 'range') {\r\n\t\t\treturn facetValues.map(value => {\r\n\t\t\t\tconst correspondingRange = facet.Ranges.find(c => c.Value === value.Value);\r\n\t\t\t\tconst rangeValueAssetUrl = correspondingRange\r\n\t\t\t\t\t? config.dashboardUrl + correspondingRange.AssetFullUrl\r\n\t\t\t\t\t: '';\r\n\r\n\t\t\t\t// facets can be selected or negated, so explicitly check that the facet is not selected\r\n\t\t\t\tconst selectionState = store.isFacetSelected(facet, value).state;\r\n\r\n\t\t\t\tconst isSelected = selectionState !== FacetSelectionState.NotSelected;\r\n\t\t\t\tconst isNegated = selectionState === FacetSelectionState.Negated;\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<li key={value.Value} className=\"hawk-facet-rail__facet-list-item\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={e => actor.selectFacet(value)}\r\n\t\t\t\t\t\t\tclassName=\"hawk-facet-rail__facet-btn\"\r\n\t\t\t\t\t\t\taria-pressed={isSelected}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{renderCheckMark(isSelected)}\r\n\t\t\t\t\t\t\t{rangeValueAssetUrl !== '' ? (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<span className=\"hawk-selectionInner\">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"hawk-range-asset\" title={value.Label} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t<img src={rangeValueAssetUrl} alt={value.Label} />\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\tstyle={isNegated ? { textDecoration: 'line-through' } : undefined}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"hawk-facet-rail__facet-name\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{value.Label} ({value.Count})\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\tstyle={isNegated ? { textDecoration: 'line-through' } : undefined}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"hawk-facet-rail__facet-name\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{value.Label} ({value.Count})\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t{renderFacetActions(value.Value || '', isNegated)}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn facetValues.map(value => {\r\n\t\t\t\t// facets can be selected or negated, so explicitly check that the facet is not selected\r\n\t\t\t\tconst selectionState = store.isFacetSelected(facet, value).state;\r\n\r\n\t\t\t\tconst isSelected = selectionState !== FacetSelectionState.NotSelected;\r\n\t\t\t\tconst isNegated = selectionState === FacetSelectionState.Negated;\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<li key={value.Value} className=\"hawk-facet-rail__facet-list-item\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={e => actor.selectFacet(value)}\r\n\t\t\t\t\t\t\tclassName=\"hawk-facet-rail__facet-btn\"\r\n\t\t\t\t\t\t\taria-pressed={isSelected}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{renderCheckMark(isSelected)}\r\n\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tstyle={isNegated ? { textDecoration: 'line-through' } : undefined}\r\n\t\t\t\t\t\t\t\tclassName=\"hawk-facet-rail__facet-name\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{value.Label} ({value.Count})\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t{renderFacetActions(value.Value || '', isNegated)}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction renderCheckMark(isSelected: boolean) {\r\n\t\treturn (\r\n\t\t\t<span\r\n\t\t\t\tclassName={\r\n\t\t\t\t\tisSelected\r\n\t\t\t\t\t\t? 'hawk-facet-rail__facet-checkbox hawk-facet-rail__facet-checkbox--checked'\r\n\t\t\t\t\t\t: 'hawk-facet-rail__facet-checkbox'\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t{isSelected ? <CheckmarkSVG class=\"hawk-facet-rail__facet-checkbox-icon\" /> : null}\r\n\t\t\t</span>\r\n\t\t);\r\n\t}\r\n\tfunction renderFacetActions(value: string, isNegated: boolean) {\r\n\t\treturn (\r\n\t\t\t<button onClick={e => actor.negateFacet(value)} className=\"hawk-facet-rail__facet-btn-exclude\">\r\n\t\t\t\t{isNegated ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<PlusCircleSVG class=\"hawk-facet-rail__facet-btn-include\" />\r\n\t\t\t\t\t\t<span className=\"visually-hidden\">Include facet</span>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<DashCircleSVG />\r\n\t\t\t\t\t\t<span className=\"visually-hidden\">Exclude facet</span>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"hawk-facet-rail__facet-values\">\r\n\t\t\t<div className=\"hawk-facet-rail__facet-values-checkbox\">\r\n\t\t\t\t<ul className=\"hawk-facet-rail__facet-list\">{renderOptions()}</ul>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* render the default truncation control as we don't need to customize this */}\r\n\t\t\t{renderer.renderTruncation()}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Checkbox;\r\n","import React, { useState } from 'react';\r\n\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\nimport { useFacet } from 'components/ui/Facets/Facet';\r\n\r\nfunction Search() {\r\n\tconst { store, actor: hawkActor } = useHawkSearch();\r\n\tconst { facet, actor } = useFacet();\r\n\r\n\tconst [input, setInput] = useState<string | undefined>(undefined);\r\n\r\n\tfunction onKeyDown(event: React.KeyboardEvent<HTMLInputElement>) {\r\n\t\tif (event.key === 'Enter') {\r\n\t\t\tsetInput(undefined); // clear the user's entered value as we want to be driven by the store again\r\n\r\n\t\t\tactor.selectFacet(event.currentTarget.value);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction clearFacet() {\r\n\t\tsetInput(undefined); // clear the user's entered value as we want to be driven by the store again\r\n\r\n\t\thawkActor.clearFacet(facet);\r\n\t}\r\n\r\n\tfunction getInputValue() {\r\n\t\tif (input !== undefined) {\r\n\t\t\t// if the user type an input, that's the value for the input\r\n\t\t\treturn input;\r\n\t\t}\r\n\r\n\t\t// otherwise, use the value from the store\r\n\t\treturn store.pendingSearch.SearchWithin || '';\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"hawk-facet-rail__facet-values\">\r\n\t\t\t\t<div className=\"hawk-facet-rail__facet-values__search\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tvalue={getInputValue()}\r\n\t\t\t\t\t\tonChange={e => setInput(e.currentTarget.value)}\r\n\t\t\t\t\t\tonKeyDown={onKeyDown}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{store.pendingSearch.SearchWithin && (\r\n\t\t\t\t<div className=\"hawk-facet-rail__facet-values__search-clear\">\r\n\t\t\t\t\t<button className=\"link-button\" onClick={clearFacet}>\r\n\t\t\t\t\t\tClear\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\n\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\nimport { useFacet } from 'components/ui/Facets/Facet';\r\nimport { FacetSelectionState } from 'store/Store';\r\n\r\nfunction Link() {\r\n\tconst { store } = useHawkSearch();\r\n\tconst {\r\n\t\tfacet,\r\n\t\tstate: { facetValues },\r\n\t\tactor,\r\n\t\trenderer,\r\n\t} = useFacet();\r\n\r\n\treturn (\r\n\t\t<div className=\"hawk-facet-rail__facet-values\">\r\n\t\t\t<div className=\"hawk-facet-rail__facet-values-link\">\r\n\t\t\t\t<ul className=\"hawk-facet-rail__facet-list\">\r\n\t\t\t\t\t{facetValues.map(value => {\r\n\t\t\t\t\t\t// facets can be selected or negated, so explicitly check that the facet is not selected\r\n\t\t\t\t\t\tconst selectionState = store.isFacetSelected(facet, value).state;\r\n\r\n\t\t\t\t\t\tconst isSelected = selectionState !== FacetSelectionState.NotSelected;\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<li key={value.Value} className=\"hawk-facet-rail__facet-list-item\">\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tonClick={e => actor.selectFacet(value)}\r\n\t\t\t\t\t\t\t\t\tclassName=\"hawk-facet-rail__facet-btn\"\r\n\t\t\t\t\t\t\t\t\taria-pressed={isSelected}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<span className=\"hawk-facet-rail__facet-name\">\r\n\t\t\t\t\t\t\t\t\t\t{value.Label} ({value.Count})\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* render the default truncation control as we don't need to customize this */}\r\n\t\t\t{renderer.renderTruncation()}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Link;\r\n","import React, { useState, useEffect } from 'react';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nexport interface SliderNumericInputsProps {\r\n\tmin: number;\r\n\tmax: number;\r\n\tvalues: number[];\r\n\tisCurrency: boolean;\r\n\tcurrencySymbol: string;\r\n\tdecimalPrecision: number;\r\n\tonValueChange(minValue: number, maxValue: number): void;\r\n}\r\nfunction SliderNumericInputs(sliderProps: SliderNumericInputsProps) {\r\n\tconst [minValue, setMinValue] = useState('' as string);\r\n\tconst [maxValue, setMaxValue] = useState('' as string);\r\n\r\n\tfunction onMinUpdate(values: any) {\r\n\t\tconst { formattedValue, value } = values;\r\n\r\n\t\tconst newMinValue = Number(value);\r\n\t\tif (isNaN(newMinValue) || minValue === value) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetMinValue(value);\r\n\t}\r\n\r\n\tfunction onMaxUpdate(values: any) {\r\n\t\tconst { formattedValue, value } = values;\r\n\r\n\t\tconst newMaxValue = Number(value);\r\n\t\tif (isNaN(newMaxValue) || maxValue === value) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetMaxValue(value);\r\n\t}\r\n\tfunction reloadFacets(event: React.FormEvent<HTMLInputElement>) {\r\n\t\tsliderProps.onValueChange(Number(minValue), Number(maxValue));\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetMinValue(sliderProps.values[0].toString());\r\n\t\tsetMaxValue(sliderProps.values[1].toString());\r\n\t}, [sliderProps]);\r\n\r\n\treturn (\r\n\t\t<div className=\"hawk-sliderNumeric\">\r\n\t\t\t<NumberFormat\r\n\t\t\t\tthousandSeparator={sliderProps.isCurrency}\r\n\t\t\t\tprefix={sliderProps.isCurrency ? sliderProps.currencySymbol : ''}\r\n\t\t\t\tvalue={minValue}\r\n\t\t\t\tclassName=\"hawk-numericInput numeric-from\"\r\n\t\t\t\tmin={sliderProps.min}\r\n\t\t\t\tmax={sliderProps.max}\r\n\t\t\t\tonValueChange={onMinUpdate}\r\n\t\t\t\tonBlur={reloadFacets}\r\n\t\t\t\tdecimalScale={sliderProps.decimalPrecision}\r\n\t\t\t/>\r\n\r\n\t\t\t<NumberFormat\r\n\t\t\t\tthousandSeparator={sliderProps.isCurrency}\r\n\t\t\t\tprefix={sliderProps.isCurrency ? sliderProps.currencySymbol : ''}\r\n\t\t\t\tvalue={maxValue}\r\n\t\t\t\tclassName=\"hawk-numericInput numeric-to\"\r\n\t\t\t\tmin={sliderProps.min}\r\n\t\t\t\tmax={sliderProps.max}\r\n\t\t\t\tonValueChange={onMaxUpdate}\r\n\t\t\t\tonBlur={reloadFacets}\r\n\t\t\t\tdecimalScale={sliderProps.decimalPrecision}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SliderNumericInputs;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { PublicState } from 'rheostat';\r\n\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\nimport { useFacet } from 'components/ui/Facets/Facet';\r\nimport SliderNumericInputs from 'components/ui/Facets/SliderNumericInputs';\r\nconst Rheostat = React.lazy(() => import(/* webpackChunkName: \"rheostat\" */ 'rheostat'));\r\n\r\nfunction Slider() {\r\n\tconst {\r\n\t\tstore: { facetSelections },\r\n\t} = useHawkSearch();\r\n\r\n\tconst {\r\n\t\tstate: { facetValues, decimalPrecision },\r\n\t\tfacet,\r\n\t\tactor,\r\n\t} = useFacet();\r\n\r\n\t// the range of the slider is defined by the first facet value. or null if there is no first value\r\n\tconst range = facetValues.length > 0 ? facetValues[0] : null;\r\n\r\n\tconst [rangeMin, setMinRange] = useState(range && Math.floor(parseFloat(range.RangeMin || '')));\r\n\tconst [rangeMax, setMaxRange] = useState(range && Math.ceil(parseFloat(range.RangeMax || '')));\r\n\tconst [rangeStart, setStartRange] = useState(range && Math.round(parseFloat(range.RangeStart || '')));\r\n\tconst [rangeEnd, setEndRange] = useState(range && Math.round(parseFloat(range.RangeEnd || '')));\r\n\r\n\t// if there's no range, initialize to zeros\r\n\tconst [minValue, setMinValue] = useState<number>();\r\n\tconst [maxValue, setMaxValue] = useState<number>();\r\n\r\n\tconst [isCurency, setIsCurrency] = useState(facet.IsCurrency);\r\n\tconst [currencySymbol, setCurrencySymbol] = useState(facet.CurrencySymbol);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetCurrencySymbol(facet.CurrencySymbol || '$');\r\n\t\tsetIsCurrency(facet.IsCurrency);\r\n\t}, [facet]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst paramName = facet.ParamName || facet.Field;\r\n\r\n\t\t// clear min and max value if these were cleared\r\n\t\tif (!paramName || !(paramName in facetSelections)) {\r\n\t\t\tsetMinValue(undefined);\r\n\t\t\tsetMaxValue(undefined);\r\n\t\t} else if (\r\n\t\t\tparamName in facetSelections &&\r\n\t\t\tfacetSelections[paramName].items &&\r\n\t\t\tfacetSelections[paramName].items.length > 0\r\n\t\t) {\r\n\t\t\tconst selectedValues = facetSelections[paramName].items[0].value.split(',');\r\n\t\t\tsetMinValue(Number(selectedValues[0]));\r\n\t\t\tsetMaxValue(Number(selectedValues[1]));\r\n\t\t}\r\n\t}, [facetSelections]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst newRange = facetValues.length > 0 ? facetValues[0] : null;\r\n\t\tsetMinRange(newRange && Math.floor(parseFloat(newRange.RangeMin || '')));\r\n\t\tsetMaxRange(newRange && Math.ceil(parseFloat(newRange.RangeMax || '')));\r\n\t\tsetStartRange(newRange && Math.round(parseFloat(newRange.RangeStart || '')));\r\n\t\tsetEndRange(newRange && Math.round(parseFloat(newRange.RangeEnd || '')));\r\n\t}, [facetValues]);\r\n\r\n\tif (\r\n\t\trangeMin === null ||\r\n\t\tisNaN(rangeMin) ||\r\n\t\trangeMax === null ||\r\n\t\tisNaN(rangeMax) ||\r\n\t\trangeStart === null ||\r\n\t\tisNaN(rangeStart) ||\r\n\t\trangeEnd === null ||\r\n\t\tisNaN(rangeEnd)\r\n\t) {\r\n\t\t// this facet is somehow misconfigured so don't render\r\n\t\treturn null;\r\n\t}\r\n\r\n\tfunction onSliderValueChange(state: PublicState) {\r\n\t\tconst [newMin, newMax] = state.values;\r\n\r\n\t\tsetFacetValues(newMin, newMax);\r\n\t}\r\n\r\n\tfunction onValueChange(newMinValue: number, newMaxValue: number) {\r\n\t\tlet currentMinValue = minValue;\r\n\t\tlet currentMaxValue = maxValue;\r\n\t\t// if min value wasn't yet selected use range start\r\n\t\tif (minValue === undefined && rangeStart !== null) {\r\n\t\t\tcurrentMinValue = rangeStart; // setMinValue(rangeStart);\r\n\t\t}\r\n\r\n\t\t// if max value wasn't yet selected use range end\r\n\t\tif (maxValue === undefined && rangeEnd !== null) {\r\n\t\t\tcurrentMaxValue = rangeEnd;\r\n\t\t}\r\n\r\n\t\tif (currentMinValue === undefined || currentMaxValue === undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (currentMinValue !== newMinValue && newMinValue <= currentMaxValue) {\r\n\t\t\tcurrentMinValue = newMinValue;\r\n\t\t}\r\n\r\n\t\tif (currentMaxValue !== newMaxValue && newMaxValue >= currentMinValue) {\r\n\t\t\tcurrentMaxValue = newMaxValue;\r\n\t\t}\r\n\t\tsetMinValue(currentMinValue);\r\n\t\tsetMaxValue(currentMaxValue);\r\n\t\tsetFacetValues(currentMinValue, currentMaxValue);\r\n\t}\r\n\r\n\tfunction setFacetValues(minVal: number | undefined, maxVal: number | undefined) {\r\n\t\tif (minVal === undefined || maxVal === undefined || isNaN(minVal) || isNaN(maxVal)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetMinValue(minVal);\r\n\t\tsetMaxValue(maxVal);\r\n\r\n\t\t// this selection is sent to hawk separated by commas, so build the value here\r\n\t\tconst selection = `${minVal},${maxVal}`;\r\n\r\n\t\tactor.setFacets([selection]);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"hawk-facet-rail__facet-values\">\r\n\t\t\t<div className=\"hawk-facet-rail__facet-values-link\">\r\n\t\t\t\t<React.Suspense fallback={<div>Loading...</div>}>\r\n\t\t\t\t\t<SliderNumericInputs\r\n\t\t\t\t\t\tmin={rangeMin}\r\n\t\t\t\t\t\tmax={rangeMax}\r\n\t\t\t\t\t\tcurrencySymbol={currencySymbol}\r\n\t\t\t\t\t\tisCurrency={isCurency}\r\n\t\t\t\t\t\tvalues={[\r\n\t\t\t\t\t\t\tminValue === undefined ? Math.floor(rangeStart) : Math.max(minValue, rangeMin),\r\n\t\t\t\t\t\t\tmaxValue === undefined ? rangeEnd : Math.min(maxValue, rangeMax),\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t\tonValueChange={onValueChange}\r\n\t\t\t\t\t\tdecimalPrecision={decimalPrecision}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Rheostat\r\n\t\t\t\t\t\tmin={rangeMin}\r\n\t\t\t\t\t\tmax={rangeMax}\r\n\t\t\t\t\t\tvalues={[\r\n\t\t\t\t\t\t\tMath.floor(minValue === undefined ? rangeStart : Math.max(minValue, rangeMin)),\r\n\t\t\t\t\t\t\tMath.ceil(maxValue === undefined ? rangeEnd : Math.min(maxValue, rangeMax)),\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t\tonChange={onSliderValueChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</React.Suspense>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Slider;\r\n","import React, { useState } from 'react';\r\n\r\nimport { Value } from 'models/Facets/Value';\r\nimport { Swatch } from 'models/Facets';\r\nimport { useHawkConfig } from 'components/ConfigProvider';\r\n\r\nexport interface SwatchItemProps {\r\n\tswatchValue: Value;\r\n\tfacetSwatch: Swatch;\r\n\tisNegated: boolean;\r\n\tisSelected: boolean;\r\n\tisColor: boolean;\r\n\tonSwatchSelected(facetValue: string, isNegated: boolean): void;\r\n}\r\n\r\nfunction SwatchItem(item: SwatchItemProps) {\r\n\tconst { config } = useHawkConfig();\r\n\r\n\tconst facetValue = item.swatchValue.Value || '';\r\n\r\n\t// facets can be selected or negated, so explicitly check that the facet is not selected\r\n\tconst swatchUrl =\r\n\t\tconfig.dashboardUrl + (!item.facetSwatch.AssetUrl ? item.facetSwatch.AssetName : item.facetSwatch.AssetUrl);\r\n\r\n\tconst colorSwatchStyle = {\r\n\t\tbackgroundColor: item.facetSwatch.Color,\r\n\t};\r\n\r\n\tconst listItemClassNames =\r\n\t\t'hawk-facet-rail__facet-list-item' +\r\n\t\t(item.isSelected ? ' hawkFacet-active' : '') +\r\n\t\t(item.isNegated ? ' hawkFacet-negative' : '');\r\n\r\n\treturn (\r\n\t\t<li key={item.facetSwatch.Value} className={listItemClassNames}>\r\n\t\t\t<button\r\n\t\t\t\tonClick={e => item.onSwatchSelected(facetValue, false)}\r\n\t\t\t\tclassName=\"hawk-facet-rail__facet-btn hawk-styleSwatch\"\r\n\t\t\t\taria-pressed={item.isSelected}\r\n\t\t\t>\r\n\t\t\t\t<span className=\"hawk-selectionInner\">\r\n\t\t\t\t\t{item.isColor ? (\r\n\t\t\t\t\t\t<span className=\"hawk-swatchColor\" style={colorSwatchStyle} title={item.facetSwatch.Value} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<img src={swatchUrl} alt={item.facetSwatch.Value} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</span>\r\n\t\t\t</button>\r\n\t\t\t<button className=\"hawk-negativeIcon\">\r\n\t\t\t\t<i className=\"hawkIcon-blocked\" onClick={e => item.onSwatchSelected(facetValue, true)} />\r\n\t\t\t</button>\r\n\t\t</li>\r\n\t);\r\n}\r\n\r\nexport default SwatchItem;\r\n","import React, { useState } from 'react';\r\n\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\nimport { useFacet } from 'components/ui/Facets/Facet';\r\nimport { FacetSelectionState } from 'store/Store';\r\nimport SwatchItem from './SwatchItem';\r\n\r\nfunction Swatch() {\r\n\tconst { store } = useHawkSearch();\r\n\tconst {\r\n\t\tfacet,\r\n\t\tactor,\r\n\t\tstate: { facetValues },\r\n\t\trenderer,\r\n\t} = useFacet();\r\n\r\n\tfunction onSwatchSelected(facetValue: string, isNegated: boolean) {\r\n\t\tisNegated ? actor.negateFacet(facetValue) : actor.selectFacet(facetValue);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"hawk-facet-rail__facet-values\">\r\n\t\t\t<div className=\"hawk-facet-rail__facet-values-swatch\">\r\n\t\t\t\t<ul className=\"hawk-facet-rail__facet-list\">\r\n\t\t\t\t\t{facet.SwatchData &&\r\n\t\t\t\t\t\tfacetValues.map(value => {\r\n\t\t\t\t\t\t\tconst facetValue = value.Value || '';\r\n\t\t\t\t\t\t\t// find swatch that is corresponding with value\r\n\t\t\t\t\t\t\tconst facetSwatch =\r\n\t\t\t\t\t\t\t\tfacet.SwatchData &&\r\n\t\t\t\t\t\t\t\tfacet.SwatchData.find(s => s.Value.toLowerCase() === facetValue.toLowerCase());\r\n\t\t\t\t\t\t\tif (!facetSwatch) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tconst selectionState = store.isFacetSelected(facet, value).state;\r\n\t\t\t\t\t\t\tconst isNegated = selectionState === FacetSelectionState.Negated;\r\n\t\t\t\t\t\t\tconst isSelected = selectionState !== FacetSelectionState.NotSelected;\r\n\r\n\t\t\t\t\t\t\tconst isColor = !!facetSwatch.Color;\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<SwatchItem\r\n\t\t\t\t\t\t\t\t\tkey={facetValue}\r\n\t\t\t\t\t\t\t\t\tswatchValue={value}\r\n\t\t\t\t\t\t\t\t\tfacetSwatch={facetSwatch}\r\n\t\t\t\t\t\t\t\t\tisSelected={isSelected}\r\n\t\t\t\t\t\t\t\t\tisColor={isColor}\r\n\t\t\t\t\t\t\t\t\tisNegated={isNegated}\r\n\t\t\t\t\t\t\t\t\tonSwatchSelected={onSwatchSelected}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* render the default truncation control as we don't need to customize this */}\r\n\t\t\t{renderer.renderTruncation()}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Swatch;\r\n","import React, { useState } from 'react';\r\n\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\nimport { FacetSelectionState } from 'store/Store';\r\nimport { useFacet } from 'components/ui/Facets/Facet';\r\nimport CheckmarkSVG from 'components/svg/CheckmarkSVG';\r\nimport { Value } from 'models/Facets';\r\nimport PlusCircleSVG from 'components/svg/PlusCircleSVG';\r\nimport DashCircleSVG from 'components/svg/DashCircleSVG';\r\n\r\nexport interface NestedItemProps {\r\n\thierarchyValue: Value;\r\n\tisNegated: boolean;\r\n\tisSelected: boolean;\r\n\tonValueSelected(facetValue: Value, isNegated: boolean): void;\r\n}\r\n\r\nfunction NestedItem(item: NestedItemProps) {\r\n\tconst { store } = useHawkSearch();\r\n\tconst { facet } = useFacet();\r\n\r\n\tconst [isExpanded, setIsExpanded] = useState(false);\r\n\tconst [isTruncated, setIsTruncated] = useState(facet.shouldTruncate);\r\n\r\n\tconst hierarchyValue = item.hierarchyValue || '';\r\n\tlet hierarchyChildren = item.hierarchyValue.Children || [];\r\n\r\n\tlet remainingValues = 0;\r\n\r\n\tconst shouldTruncateChildren =\r\n\t\tfacet.DisplayType === 'truncating' && hierarchyChildren.length > facet.TruncateThreshold;\r\n\r\n\tif (shouldTruncateChildren && isTruncated) {\r\n\t\tconst valuesBeforeTrunc = hierarchyChildren.length;\r\n\r\n\t\thierarchyChildren = hierarchyChildren.slice(0, facet.TruncateThreshold);\r\n\r\n\t\tremainingValues = valuesBeforeTrunc - facet.TruncateThreshold;\r\n\t}\r\n\r\n\tfunction renderChildTruncation() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{shouldTruncateChildren && (\r\n\t\t\t\t\t<li className=\"hawk-facet-rail__facet-list-item hawk-show-more\">\r\n\t\t\t\t\t\t<button onClick={() => setIsTruncated(!isTruncated)} className=\"hawk-facet-rail__show-more-btn\">\r\n\t\t\t\t\t\t\t{isTruncated ? `(+) Show ${remainingValues} More` : '(-) Show Less'}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<li className=\"hawk-facet-rail__facet-list-item hawkFacet-group\">\r\n\t\t\t<div className=\"hawkFacet-group__inline\">\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={() => item.onValueSelected(hierarchyValue, false)}\r\n\t\t\t\t\tclassName=\"hawk-facet-rail__facet-btn\"\r\n\t\t\t\t\taria-pressed={item.isSelected}\r\n\t\t\t\t>\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\titem.isSelected\r\n\t\t\t\t\t\t\t\t? 'hawk-facet-rail__facet-checkbox hawk-facet-rail__facet-checkbox--checked'\r\n\t\t\t\t\t\t\t\t: 'hawk-facet-rail__facet-checkbox'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{item.isSelected ? <CheckmarkSVG class=\"hawk-facet-rail__facet-checkbox-icon\" /> : null}\r\n\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tstyle={item.isNegated ? { textDecoration: 'line-through' } : undefined}\r\n\t\t\t\t\t\tclassName=\"hawk-facet-rail__facet-name\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{item.hierarchyValue.Label} ({item.hierarchyValue.Count})\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={e => item.onValueSelected(hierarchyValue, true)}\r\n\t\t\t\t\tclassName=\"hawk-facet-rail__facet-btn-exclude\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{item.isNegated ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<PlusCircleSVG class=\"hawk-facet-rail__facet-btn-include\" />\r\n\t\t\t\t\t\t\t<span className=\"visually-hidden\">Include facet</span>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<DashCircleSVG />\r\n\t\t\t\t\t\t\t<span className=\"visually-hidden\">Exclude facet</span>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</button>\r\n\t\t\t\t{hierarchyChildren.length > 0 ? (\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName={isExpanded ? 'hawk-collapseState' : 'hawk-collapseState collapsed'}\r\n\t\t\t\t\t\taria-expanded=\"false\"\r\n\t\t\t\t\t\tonClick={() => setIsExpanded(!isExpanded)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t</button>\r\n\t\t\t\t) : null}\r\n\t\t\t</div>\r\n\t\t\t{isExpanded && hierarchyChildren ? (\r\n\t\t\t\t<div className=\"hawk-facet-rail__w-100\">\r\n\t\t\t\t\t<ul className=\"hawkFacet-group-inside\">\r\n\t\t\t\t\t\t{hierarchyChildren.map(value => {\r\n\t\t\t\t\t\t\tconst selectionState = store.isFacetSelected(facet, value).state;\r\n\t\t\t\t\t\t\tconst isNegated = selectionState === FacetSelectionState.Negated;\r\n\t\t\t\t\t\t\tconst isSelected = selectionState !== FacetSelectionState.NotSelected;\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<NestedItem\r\n\t\t\t\t\t\t\t\t\tkey={value.Path}\r\n\t\t\t\t\t\t\t\t\thierarchyValue={value}\r\n\t\t\t\t\t\t\t\t\tisSelected={isSelected}\r\n\t\t\t\t\t\t\t\t\tisNegated={isNegated}\r\n\t\t\t\t\t\t\t\t\tonValueSelected={item.onValueSelected}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t{renderChildTruncation()}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<></>\r\n\t\t\t)}\r\n\t\t</li>\r\n\t);\r\n}\r\n\r\nexport default NestedItem;\r\n","import React from 'react';\r\n\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\nimport { FacetSelectionState } from 'store/Store';\r\nimport { useFacet } from 'components/ui/Facets/Facet';\r\nimport NestedItem from './NestedItem';\r\nimport { Value } from 'models/Facets/Value';\r\n\r\nfunction Nested() {\r\n\tconst { store } = useHawkSearch();\r\n\tconst {\r\n\t\tfacet,\r\n\t\tstate: { facetValues },\r\n\t\tactor,\r\n\t\trenderer,\r\n\t} = useFacet();\r\n\r\n\tfunction onValueSelected(facetValue: Value, isNegated: boolean) {\r\n\t\tisNegated ? actor.negateFacet(facetValue) : actor.selectFacet(facetValue);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"hawk-facet-rail__facet-values\">\r\n\t\t\t<div className=\"hawk-facet-rail__facet-values-checkbox\">\r\n\t\t\t\t<ul className=\"hawk-facet-rail__facet-list\">\r\n\t\t\t\t\t{facetValues.map(value => {\r\n\t\t\t\t\t\t// facets can be selected or negated, so explicitly check that the facet is not selected\r\n\t\t\t\t\t\tconst selectionState = store.isFacetSelected(facet, value).state;\r\n\r\n\t\t\t\t\t\tconst isSelected = selectionState !== FacetSelectionState.NotSelected;\r\n\t\t\t\t\t\tconst isNegated = selectionState === FacetSelectionState.Negated;\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<NestedItem\r\n\t\t\t\t\t\t\t\tkey={value.Value}\r\n\t\t\t\t\t\t\t\thierarchyValue={value}\r\n\t\t\t\t\t\t\t\tisSelected={isSelected}\r\n\t\t\t\t\t\t\t\tisNegated={isNegated}\r\n\t\t\t\t\t\t\t\tonValueSelected={onValueSelected}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* render the default truncation control as we don't need to customize this */}\r\n\t\t\t{renderer.renderTruncation()}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Nested;\r\n","import React, { useState } from 'react';\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\nimport { useFacet } from 'components/ui/Facets/Facet';\r\n\r\nfunction OpenRange() {\r\n\tconst { actor: hawkActor } = useHawkSearch();\r\n\r\n\tconst {\r\n\t\tstate: { facetValues },\r\n\t\tfacet,\r\n\t\tactor,\r\n\t} = useFacet();\r\n\r\n\t// the open range boundary values are defined by the first facet value. or null if there is no first value\r\n\r\n\tconst range = facetValues.length > 0 ? facetValues[0] : null;\r\n\r\n\tconst rangeStart = (range && range.RangeStart) || '';\r\n\tconst rangeEnd = (range && range.RangeEnd) || '';\r\n\r\n\t// if there's no range, initialize to empty strings\r\n\tconst [minValue, setStartValue] = useState(rangeStart || '');\r\n\tconst [maxValue, setEndValue] = useState(rangeEnd || '');\r\n\r\n\tif (rangeStart === null || rangeEnd === null) {\r\n\t\t// this facet is somehow misconfigured so don't render\r\n\t\treturn null;\r\n\t}\r\n\r\n\tfunction onRangeStartChange(event: React.FormEvent<HTMLInputElement>) {\r\n\t\tsetFacetValues(event.currentTarget.value, maxValue);\r\n\t}\r\n\r\n\tfunction onRangeEndChange(event: React.FormEvent<HTMLInputElement>) {\r\n\t\tsetFacetValues(minValue, event.currentTarget.value);\r\n\t}\r\n\r\n\tfunction setFacetValues(startVal: string, endVal: string) {\r\n\t\tsetStartValue(startVal);\r\n\t\tsetEndValue(endVal);\r\n\r\n\t\t// this selection is sent to hawk separated by commas, so build the value here\r\n\r\n\t\tif (startVal === '' && endVal === '') {\r\n\t\t\thawkActor.clearFacet(facet);\r\n\t\t} else {\r\n\t\t\tconst selection = `${startVal},${endVal}`;\r\n\t\t\tactor.setFacets([selection]);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"hawk-facet-rail__facet-values\">\r\n\t\t\t<div className=\"hawk-facet-rail__facet-values-link\">\r\n\t\t\t\t<div className=\"hawk-open-range\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"hawk-text-input value-start\"\r\n\t\t\t\t\t\tdata-type=\"currency\"\r\n\t\t\t\t\t\tvalue={minValue}\r\n\t\t\t\t\t\tonChange={onRangeStartChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"hawk-text-input value-end\"\r\n\t\t\t\t\t\tonChange={onRangeEndChange}\r\n\t\t\t\t\t\tvalue={maxValue}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default OpenRange;\r\n","export enum FacetType {\r\n\tCheckbox = 'checkbox',\r\n\tNestedCheckbox = 'nestedcheckbox',\r\n\tLink = 'link',\r\n\tNestedlink = 'nestedlink',\r\n\tSlider = 'slider',\r\n\tSwatch = 'swatch',\r\n\tRating = 'rating',\r\n\tSize = 'size',\r\n\tSearchWithin = 'search',\r\n\tRecentSearches = 'recentsearches',\r\n\tRelatedSearches = 'relatedsearches',\r\n\tOpenRange = 'openRange',\r\n}\r\n","import {\r\n\tCheckbox as DefaultCheckbox,\r\n\tNestedCheckbox as DefaultNestedCheckbox,\r\n\tSearch as DefaultSearch,\r\n\tLink as DefaultLink,\r\n\tSlider as DefaultSlider,\r\n\tSwatch as DefaultSwatch,\r\n\tOpenRange as DefaultOpenRange,\r\n} from 'components/ui/Facets/FacetTypes';\r\nimport { FacetComponent } from 'types/FacetComponent';\r\nimport { FacetType } from 'models/Facets/FacetType';\r\n\r\n// the default set of facet components that we support\r\nconst defaultFacetComponents: FacetComponent[] = [\r\n\t{ facetType: FacetType.Checkbox, component: DefaultCheckbox },\r\n\t{ facetType: FacetType.NestedCheckbox, component: DefaultNestedCheckbox },\r\n\t{ facetType: FacetType.SearchWithin, component: DefaultSearch },\r\n\t{ facetType: FacetType.Link, component: DefaultLink },\r\n\t{ facetType: FacetType.Slider, component: DefaultSlider },\r\n\t{ facetType: FacetType.Swatch, component: DefaultSwatch },\r\n\t{ facetType: FacetType.OpenRange, component: DefaultOpenRange },\r\n];\r\n\r\n/**\r\n * Builds a list of all supported facet components by also taking into consideration overridden components.\r\n */\r\nexport function getFacetComponents(overridedComponents: FacetComponent[]) {\r\n\tconst facetComponents: FacetComponent[] = [];\r\n\r\n\t// tslint:disable-next-line:forin\r\n\tfor (const key in FacetType) {\r\n\t\tconst fType = FacetType[key];\r\n\r\n\t\tconst fComponent =\r\n\t\t\t// check to see if the facet is overridden\r\n\t\t\toverridedComponents.find(component => component.facetType === fType) ||\r\n\t\t\t// otherwise, pull from defaults\r\n\t\t\tdefaultFacetComponents.find(component => component.facetType === fType);\r\n\r\n\t\tif (fComponent) {\r\n\t\t\tfacetComponents.push(fComponent);\r\n\t\t}\r\n\t}\r\n\r\n\treturn facetComponents;\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\nimport { useHawkConfig } from 'components/ConfigProvider';\r\nimport Facet from './Facet';\r\nimport PlaceholderFacet from './PlaceholderFacet';\r\nimport { getFacetComponents } from 'components/ui/Facets/Overrides';\r\n\r\nfunction FacetList() {\r\n\tconst {\r\n\t\tstore: { searchResults },\r\n\t} = useHawkSearch();\r\n\r\n\tconst { config } = useHawkConfig();\r\n\r\n\t// the number of random placeholders to render while we wait for results\r\n\tconst [numPlaceholders] = useState(Math.round(Math.random() * (5 - 3) + 3));\r\n\r\n\tconst components = getFacetComponents(config.facetOverrides || []);\r\n\r\n\treturn (\r\n\t\t<div className=\"hawk-facet-rail__facet-list\">\r\n\t\t\t{searchResults\r\n\t\t\t\t? // if there are search results, render the facets\r\n\t\t\t\t  searchResults.Facets.map(facet => {\r\n\t\t\t\t\t\tif (!facet.IsVisible) {\r\n\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst registeredComponent = components.find(\r\n\t\t\t\t\t\t\tcomponent => component.facetType === facet.FacetType\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tconst Component = !registeredComponent ? null : registeredComponent.component;\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Facet key={facet.FacetId} facet={facet}>\r\n\t\t\t\t\t\t\t\t{Component ? (\r\n\t\t\t\t\t\t\t\t\t<Component />\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t{facet.FieldType} {facet.FacetType} is not implemented!\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Facet>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t  })\r\n\t\t\t\t: // otherwise render a couple placeholders\r\n\t\t\t\t  [...Array(numPlaceholders)].map((_, i) => <PlaceholderFacet key={i} />)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default FacetList;\r\n","import React from 'react';\r\n\r\nimport FacetList from './FacetList';\r\n\r\nfunction FacetRail() {\r\n\treturn (\r\n\t\t<div className=\"hawk-facet-rail\">\r\n\t\t\t<div className=\"hawk-facet-rail__heading\">Narrow Results</div>\r\n\r\n\t\t\t<FacetList />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default FacetRail;\r\n","import * as React from 'react';\r\n\r\ninterface LeftChevronSVGProps {\r\n\tclass: string;\r\n}\r\n\r\n/**\r\n * Left chevron SVG\r\n *\r\n * @returns\r\n */\r\nfunction LeftChevronSVG(props: LeftChevronSVGProps) {\r\n\treturn (\r\n\t\t<svg viewBox=\"0 0 19 32\" className={'icon ' + props.class} focusable=\"false\" aria-hidden=\"true\">\r\n\t\t\t<path d=\"M18.462 27.891c0.457 0.427 0.742 1.034 0.742 1.707s-0.285 1.279-0.741 1.705l-0.001 0.001c-0.467 0.437-1.097 0.705-1.789 0.705s-1.322-0.268-1.79-0.706l0.002 0.001-14.146-13.598c-0.457-0.427-0.742-1.034-0.742-1.707s0.285-1.28 0.741-1.705l0.001-0.001 14.142-13.589c0.468-0.436 1.097-0.704 1.79-0.704s1.322 0.268 1.791 0.706l-0.002-0.001c0.457 0.427 0.742 1.034 0.742 1.707s-0.285 1.28-0.741 1.705l-0.001 0.001-11.597 11.883z\" />\r\n\t\t</svg>\r\n\t);\r\n}\r\n\r\nexport default LeftChevronSVG;\r\n","import * as React from 'react';\r\n\r\ninterface RightChevronSVGProps {\r\n\tclass: string;\r\n}\r\n\r\n/**\r\n * Right chevron SVG\r\n *\r\n * @returns\r\n */\r\nfunction RightChevronSVG(props: RightChevronSVGProps) {\r\n\treturn (\r\n\t\t<svg viewBox=\"0 0 19 32\" className={'icon ' + props.class} focusable=\"false\" aria-hidden=\"true\">\r\n\t\t\t<path d=\"M0.738 4.109c-0.457-0.427-0.742-1.034-0.742-1.707s0.285-1.28 0.741-1.705l0.001-0.001c0.467-0.437 1.097-0.705 1.789-0.705s1.322 0.268 1.79 0.706l-0.002-0.001 14.146 13.598c0.457 0.427 0.742 1.034 0.742 1.707s-0.285 1.279-0.741 1.705l-0.001 0.001-14.142 13.589c-0.468 0.436-1.097 0.704-1.79 0.704s-1.322-0.268-1.791-0.706l0.002 0.001c-0.457-0.427-0.742-1.034-0.742-1.707s0.285-1.279 0.741-1.705l0.001-0.001 11.597-11.883z\" />\r\n\t\t</svg>\r\n\t);\r\n}\r\n\r\nexport default RightChevronSVG;\r\n","import React, { useState } from 'react';\r\n\r\nimport { LeftChevronSVG, RightChevronSVG } from 'components/svg';\r\n\r\ninterface PagerProps {\r\n\tpage: number;\r\n\ttotalPages: number;\r\n\r\n\tonPageChange: (page: number) => void;\r\n}\r\n\r\nfunction Pager({ page, totalPages, onPageChange }: PagerProps) {\r\n\tconst [inputValue, setInputValue] = useState<string | undefined>(undefined);\r\n\tconst [hasError, setHasError] = useState(false);\r\n\r\n\tfunction goToPreviousPage() {\r\n\t\tgoToPage(page - 1);\r\n\t}\r\n\r\n\tfunction goToNextPage() {\r\n\t\tgoToPage(page + 1);\r\n\t}\r\n\r\n\tfunction goToPage(pageNo: number) {\r\n\t\tif (isNaN(pageNo)) {\r\n\t\t\t// not a valid number\r\n\t\t\tdoInputError();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (pageNo < 1) {\r\n\t\t\t// can't go beyond the first page\r\n\t\t\tdoInputError();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (pageNo > totalPages) {\r\n\t\t\t// can't go beyond the last page\r\n\t\t\tdoInputError();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// once we've determined that we *do* want to do this page change, clear the user's input\r\n\t\t// because the input should be driven by props again\r\n\t\tsetInputValue(undefined);\r\n\r\n\t\t// inform the consumer that we've changed pages\r\n\t\tonPageChange(pageNo);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the input value for the pager input control. If the user has typed in a value into the input then\r\n\t * that value will be returned; otherwise, the page value passed in via props will be returned.\r\n\t */\r\n\tfunction getInputValue() {\r\n\t\tif (inputValue !== undefined) {\r\n\t\t\t// if the user typed an input, that's the page value for the control\r\n\t\t\treturn inputValue || '';\r\n\t\t}\r\n\r\n\t\t// otherwise, fall back to what's passed in through props\r\n\t\treturn page;\r\n\t}\r\n\r\n\tfunction onKeyDown(event: React.KeyboardEvent<HTMLInputElement>) {\r\n\t\tif (event.key === 'Enter') {\r\n\t\t\tconst wantedPageNo = parseInt(event.currentTarget.value, 10);\r\n\t\t\tgoToPage(wantedPageNo);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction doInputError() {\r\n\t\tsetHasError(true);\r\n\r\n\t\t// in 500ms, clear the error animation\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetHasError(false);\r\n\t\t}, 500);\r\n\t}\r\n\r\n\tfunction onChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n\t\tsetInputValue(event.currentTarget.value);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"hawk-pagination__controls\">\r\n\t\t\t<button className=\"hawk-pagination__item\" onClick={goToPreviousPage}>\r\n\t\t\t\t<LeftChevronSVG class=\"hawk-pagination__left\" />\r\n\t\t\t\t<span className=\"visually-hidden\">Previous page</span>\r\n\t\t\t</button>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tvalue={getInputValue()}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t\tonKeyDown={onKeyDown}\r\n\t\t\t\tclassName={hasError ? 'hawk-pagination__input error' : 'hawk-pagination__input'}\r\n\t\t\t/>\r\n\t\t\t<span className=\"hawk-pagination__total-text\">&nbsp; of {totalPages}</span>\r\n\t\t\t<button className=\"hawk-pagination__item\" onClick={goToNextPage}>\r\n\t\t\t\t<RightChevronSVG class=\"hawk-pagination__right\" />\r\n\t\t\t\t<span className=\"visually-hidden\">Next page</span>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Pager;\r\n","import React from 'react';\r\n\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\n\r\nfunction ItemsPerPage() {\r\n\tconst {\r\n\t\tstore: { searchResults, pendingSearch },\r\n\t\tactor,\r\n\t} = useHawkSearch();\r\n\r\n\tfunction onChange(event: React.ChangeEvent<HTMLSelectElement>) {\r\n\t\tactor.setSearch({\r\n\t\t\tMaxPerPage: Number(event.currentTarget.value),\r\n\t\t\tPageNo: 1, // if we change our max items per page, reset to page 1\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"hawk-items-per-page\">\r\n\t\t\t<select value={pendingSearch.MaxPerPage} onChange={onChange}>\r\n\t\t\t\t{searchResults ? (\r\n\t\t\t\t\tsearchResults.Pagination.Items.map(paginationItem => (\r\n\t\t\t\t\t\t<option key={paginationItem.PageSize} value={paginationItem.PageSize}>\r\n\t\t\t\t\t\t\t{paginationItem.Label}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t))\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<option>12 Items Per Page</option>\r\n\t\t\t\t)}\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ItemsPerPage;\r\n","import React from 'react';\r\n\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\nimport Pager from './Pager';\r\nimport ItemsPerPage from './ItemsPerPage';\r\n\r\nfunction Pagination() {\r\n\tconst {\r\n\t\tstore: { searchResults, pendingSearch },\r\n\t\tactor,\r\n\t} = useHawkSearch();\r\n\r\n\tfunction onPageChange(pageNo: number) {\r\n\t\t// when the pager's page changes, trigger a new search\r\n\t\tactor.setSearch({\r\n\t\t\tPageNo: pageNo,\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"hawk-pagination\">\r\n\t\t\t<Pager\r\n\t\t\t\tpage={searchResults ? pendingSearch.PageNo || 1 : 0}\r\n\t\t\t\ttotalPages={searchResults ? searchResults.Pagination.NofPages : 0}\r\n\t\t\t\tonPageChange={onPageChange}\r\n\t\t\t/>\r\n\r\n\t\t\t<ItemsPerPage />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\n\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\n\r\nfunction Sorting() {\r\n\tconst {\r\n\t\tstore: { searchResults, pendingSearch },\r\n\t\tactor,\r\n\t} = useHawkSearch();\r\n\r\n\tfunction onChange(event: React.ChangeEvent<HTMLSelectElement>) {\r\n\t\tactor.setSearch({\r\n\t\t\tSortBy: event.currentTarget.value,\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"hawk-sorting\">\r\n\t\t\t<span className=\"hawk-sorting__label\">Sort By</span>\r\n\r\n\t\t\t<select value={pendingSearch.SortBy} onChange={onChange}>\r\n\t\t\t\t{searchResults ? (\r\n\t\t\t\t\tsearchResults.Sorting.Items.map(sortingItem => (\r\n\t\t\t\t\t\t<option key={sortingItem.Value} value={sortingItem.Value}>\r\n\t\t\t\t\t\t\t{sortingItem.Label}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t))\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<option value=\"score\">Best Match</option>\r\n\t\t\t\t)}\r\n\t\t\t</select>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Sorting;\r\n","import React from 'react';\r\n\r\nimport { Sorting, Pagination } from './Tools';\r\n\r\nfunction ToolRow() {\r\n\treturn (\r\n\t\t<div className=\"hawk-tool-row\">\r\n\t\t\t<div className=\"hawk-tool-row__item\">\r\n\t\t\t\t<Sorting />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"hawk-tool-row__item\">\r\n\t\t\t\t<Pagination />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ToolRow;\r\n","import React, { useState } from 'react';\r\n\r\nexport interface PlaceholderImageProps {\r\n\t/** Whether or not to display a spinner in the center of the placeholder. */\r\n\tshowSpinner: boolean;\r\n}\r\n\r\nfunction PlaceholderImage({ showSpinner }: PlaceholderImageProps) {\r\n\tconst [height] = useState(Math.round(Math.random() * (175 - 125) + 125));\r\n\r\n\treturn (\r\n\t\t<div className=\"hawk-results__item-placeholder\" style={{ height: `${height}px` }}>\r\n\t\t\t{showSpinner && <div className=\"hawk-placeholder__image\">Loading...</div>}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default PlaceholderImage;\r\n","import React from 'react';\r\n\r\nimport PlaceholderImage from './PlaceholderImage';\r\n\r\nfunction PlaceholderItem() {\r\n\treturn (\r\n\t\t<div className=\"hawk-results__item\">\r\n\t\t\t<div className=\"hawk-results__item-image\">\r\n\t\t\t\t<PlaceholderImage showSpinner={false} />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"hawk-results__item-name\">\r\n\t\t\t\t<div className=\"hawk-results__item-name-placeholder\" />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default PlaceholderItem;\r\n","import React from 'react';\r\n\r\nexport interface SpinnerProps {\r\n\tisVisible: boolean;\r\n}\r\n\r\nfunction Spinner({ isVisible }: SpinnerProps) {\r\n\tif (!isVisible) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={'hawk-modal'}>\r\n\t\t\t<div className={'hawk-modal__content'}>Loading...</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { useState } from 'react';\r\n\r\nimport { Result } from 'models/Search';\r\nimport PlaceholderImage from './PlaceholderImage';\r\n\r\nexport interface ResultImageProps {\r\n\titem: Result;\r\n\twebsiteUrl?: string;\r\n\titemTitleFieldName?: string;\r\n\timageUrlFieldName?: string;\r\n}\r\n\r\nfunction ResultImage({ item, websiteUrl, itemTitleFieldName, imageUrlFieldName }: ResultImageProps) {\r\n\tconst [imageLoaded, setImageLoaded] = useState(false);\r\n\r\n\tlet imageUrl = imageUrlFieldName ? item.getDocumentValue(imageUrlFieldName) : item.getDocumentValue('image');\r\n\tif (!imageUrl) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst itemName = itemTitleFieldName ? item.getDocumentValue(itemTitleFieldName) : item.getDocumentValue('itemname');\r\n\r\n\tconst absoluteUrlTester = new RegExp('^https?://|^//', 'i');\r\n\tif (!absoluteUrlTester.test(imageUrl) && websiteUrl) {\r\n\t\timageUrl = websiteUrl + imageUrl;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"hawk-results__item-image\">\r\n\t\t\t<div style={imageLoaded ? {} : { overflow: 'hidden', width: '0px', height: '0px' }}>\r\n\t\t\t\t<img onLoad={() => setImageLoaded(true)} src={imageUrl} alt={`Image for ${itemName}`} />\r\n\t\t\t</div>\r\n\r\n\t\t\t{!imageLoaded ? (\r\n\t\t\t\t// if the main image hasn't loaded yet, show a placeholder\r\n\t\t\t\t<PlaceholderImage showSpinner={true} />\r\n\t\t\t) : null}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ResultImage;\r\n","import React from 'react';\r\n\r\nimport { Result } from 'models/Search';\r\nimport ResultImage from './ResultImage';\r\n\r\nexport interface ResultItemProps {\r\n\titem: Result;\r\n}\r\n\r\nfunction ResultItem({ item }: ResultItemProps) {\r\n\tconst itemName = item.getDocumentValue('itemname');\r\n\r\n\treturn (\r\n\t\t<div className=\"hawk-results__item\">\r\n\t\t\t<ResultImage item={item} />\r\n\r\n\t\t\t<div className=\"hawk-results__item-name\">\r\n\t\t\t\t<span>{itemName}</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ResultItem;\r\n","import React from 'react';\r\nimport PlaceholderItem from './PlaceholderItem';\r\nimport Spinner from 'components/ui/Spinner';\r\nimport { default as DefaultResultItem, ResultItemProps } from './ResultItem';\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\n\r\nexport interface ResultsListingProps {\r\n\tResultItem: React.ComponentType<ResultItemProps>;\r\n}\r\n\r\nfunction ResultListing({ ResultItem = DefaultResultItem }: ResultsListingProps) {\r\n\tconst {\r\n\t\tstore: { isLoading, searchResults },\r\n\t} = useHawkSearch();\r\n\r\n\tconst results = searchResults ? searchResults.Results : [];\r\n\r\n\treturn (\r\n\t\t<div className=\"hawk-results__listing\">\r\n\t\t\t<Spinner isVisible={isLoading} />\r\n\r\n\t\t\t{results.length\r\n\t\t\t\t? // if we have results, display them\r\n\t\t\t\t  results.map(result => <ResultItem key={result.DocId} item={result} />)\r\n\t\t\t\t: // otherwise display placeholder items as we're loading\r\n\t\t\t\t  [...Array(12)].map((_, i) => <PlaceholderItem key={i} />)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ResultListing;\r\n","import * as React from 'react';\r\n\r\ninterface XCircleSVGProps {\r\n\tclass?: string;\r\n}\r\n\r\n/**\r\n * X Circle SVG\r\n *\r\n * @returns\r\n */\r\nfunction XCircleSVG(props: XCircleSVGProps) {\r\n\treturn (\r\n\t\t<svg\r\n\t\t\tviewBox=\"0 0 32 32\"\r\n\t\t\tclassName={'icon icon-help-header ' + props.class}\r\n\t\t\tfocusable=\"false\"\r\n\t\t\taria-hidden=\"true\"\r\n\t\t>\r\n\t\t\t<path\r\n\t\t\t\tfill=\"#d9534f\"\r\n\t\t\t\td=\"M15.998 0c8.837 0 16 7.163 16 16s-7.163 16-16 16c-8.837 0-16-7.163-16-16v0c0-8.837 7.163-16 16-16v0z\"\r\n\t\t\t/>\r\n\t\t\t<path\r\n\t\t\t\tfill=\"#fff\"\r\n\t\t\t\td=\"M13.6 11.646l7.171 7.171c0.541 0.541 0.541 1.417 0 1.958l0.002-0.002c-0.541 0.541-1.417 0.541-1.958 0l-7.171-7.171c-0.541-0.541-0.541-1.417 0-1.958l-0.002 0.002c0.541-0.541 1.417-0.541 1.958 0z\"\r\n\t\t\t/>\r\n\t\t\t<path\r\n\t\t\t\tfill=\"#fff\"\r\n\t\t\t\td=\"M20.774 13.6l-7.174 7.174c-0.54 0.54-1.415 0.54-1.955 0l-0.002-0.002c-0.54-0.54-0.54-1.415 0-1.955l7.174-7.174c0.54-0.54 1.415-0.54 1.955 0l0.002 0.002c0.54 0.54 0.54 1.415 0 1.955z\"\r\n\t\t\t/>\r\n\t\t</svg>\r\n\t);\r\n}\r\n\r\nexport default XCircleSVG;\r\n","import React from 'react';\r\n\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\nimport XCircleSVG from 'components/svg/XCircleSVG';\r\nimport { ClientSelectionValue, ClientSelection } from 'store/ClientSelections';\r\nimport { Facet, Range } from 'models/Facets';\r\n\r\nfunction Selections() {\r\n\tconst {\r\n\t\tstore: { facetSelections, pendingSearch },\r\n\t\tactor,\r\n\t} = useHawkSearch();\r\n\tconst keys = Object.keys(facetSelections);\r\n\r\n\tif (keys.length === 0) {\r\n\t\t// no selections, so render nothing\r\n\t\treturn null;\r\n\t}\r\n\r\n\tfunction clearSelection(facet: string, value?: ClientSelectionValue) {\r\n\t\tif (value) {\r\n\t\t\tactor.clearFacetValue(facet, value.value);\r\n\t\t} else {\r\n\t\t\tactor.clearFacet(facet);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction clearAll() {\r\n\t\tactor.clearAllFacets();\r\n\t}\r\n\r\n\tfunction renderRange(value: ClientSelectionValue, facet: Facet) {\r\n\t\tconst displayValue = value.value;\r\n\r\n\t\tif (!displayValue || displayValue.indexOf(',') === -1) {\r\n\t\t\t// range facet selection values should include a comma, so if they don't then this likely isn't a valid\r\n\t\t\t// range value that we want to render\r\n\t\t\tconst selectedRange = facet.Ranges.find((range: Range) => range.Value === value.value);\r\n\t\t\treturn selectedRange ? selectedRange.Label : displayValue;\r\n\t\t}\r\n\r\n\t\tconst splittedValues = displayValue.split(',');\r\n\t\tif (facet.IsCurrency && splittedValues.length > 1) {\r\n\t\t\treturn `${facet.CurrencySymbol} ${splittedValues[0]} - ${facet.CurrencySymbol} ${splittedValues[1]}`;\r\n\t\t}\r\n\r\n\t\t// return a prettier display value for ranges\r\n\t\treturn displayValue.replace(',', ' - ');\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"hawk-facet-rail__selections\">\r\n\t\t\t<h4>You've Selected</h4>\r\n\t\t\t<ul className=\"hawk-selections\">\r\n\t\t\t\t{keys.map(key => {\r\n\t\t\t\t\tconst selection = facetSelections[key];\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li key={key} className=\"hawk-selections__category\">\r\n\t\t\t\t\t\t\t<div className=\"hawk-selections__category-wrapper\">\r\n\t\t\t\t\t\t\t\t<span className=\"hawk-selections__category-name\">{selection.label}:</span>\r\n\r\n\t\t\t\t\t\t\t\t<ul className=\"hawk-selections__item-list\">\r\n\t\t\t\t\t\t\t\t\t{selection.items.map(item => {\r\n\t\t\t\t\t\t\t\t\t\tconst negation = item.value.startsWith('-');\r\n\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<li key={item.value} className=\"hawk-selections__item\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => clearSelection(key, item)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"hawk-selections__item-remove\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<XCircleSVG />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"visually-hidden\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tUnselect facet {selection.label} {item.label}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnegation\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'hawk-selections__item-name hawk-selections__item-name--negated'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'hawk-selections__item-name'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{selection.facet.FieldType === 'range'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? // render ranges in a specific way\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  renderRange(item, selection.facet)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: // other facets can have their labels rendered directly\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  item.label}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<button onClick={() => clearSelection(key)} className=\"hawk-selections__category-remove\">\r\n\t\t\t\t\t\t\t\t<XCircleSVG />{' '}\r\n\t\t\t\t\t\t\t\t<span className=\"visually-hidden\">Unselect all facets for {selection.label}</span>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\r\n\t\t\t\t<li className=\"hawk-selections__category\">\r\n\t\t\t\t\t<button onClick={clearAll} className=\"hawk-btn hawk-btn-primary-outline\">\r\n\t\t\t\t\t\tClear All\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Selections;\r\n","import React from 'react';\r\n\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\n\r\nfunction SearchResultsLabel() {\r\n\tconst {\r\n\t\tstore: { pendingSearch },\r\n\t} = useHawkSearch();\r\n\r\n\tif (!pendingSearch.Keyword) {\r\n\t\t// no selections, so render nothing\r\n\t\treturn null;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"hawk-facet-rail__results-label\">\r\n\t\t\t<h3>Search Results {pendingSearch.Keyword ? 'for ' + pendingSearch.Keyword : null}</h3>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchResultsLabel;\r\n","import React from 'react';\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\nimport ToolRow from 'components/ui/Results/ToolRow';\r\nimport ResultListing from 'components/ui/Results/ResultListing';\r\nimport Selections from 'components/ui/Facets/Selections';\r\nimport { default as DefaultResultItem, ResultItemProps } from 'components/ui/Results/ResultItem';\r\nimport SearchResultsLabel from 'components/ui/Facets/SearchResultsLabel';\r\n\r\nexport interface ResultsProps {\r\n\tResultItem?: React.ComponentType<ResultItemProps>;\r\n}\r\n\r\nfunction Results({ ResultItem = DefaultResultItem }: ResultsProps) {\r\n\tconst {\r\n\t\tstore: { isLoading, searchResults },\r\n\t} = useHawkSearch();\r\n\r\n\t// end of overrides\r\n\tif ((!searchResults || searchResults.Results.length === 0) && !isLoading) {\r\n\t\treturn <span>No Results</span>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"hawk-results\">\r\n\t\t\t<SearchResultsLabel />\r\n\t\t\t<Selections />\r\n\r\n\t\t\t<div className=\"hawk-results__top-tool-row\">\r\n\t\t\t\t<ToolRow />\r\n\t\t\t</div>\r\n\r\n\t\t\t<ResultListing ResultItem={ResultItem} />\r\n\r\n\t\t\t<div className=\"hawk-results__bottom-tool-row\">\r\n\t\t\t\t<ToolRow />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Results;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport SearchBox from 'components/ui/SearchBox/SearchBox';\r\nimport FacetRail from 'components/ui/Facets/FacetRail';\r\nimport { Results } from 'components/ui/Results';\r\nimport { useHawkConfig } from 'components/ConfigProvider';\r\n\r\nfunction App() {\r\n\tconst { config } = useHawkConfig();\r\n\r\n\tfunction getElement(elem: HTMLElement | string) {\r\n\t\tif (typeof elem === 'string') {\r\n\t\t\treturn document.getElementById(elem);\r\n\t\t}\r\n\r\n\t\treturn elem;\r\n\t}\r\n\r\n\tfunction renderSearchBox() {\r\n\t\treturn (\r\n\t\t\t<div className=\"hawk\">\r\n\t\t\t\t<div className=\"hawk__header\">\r\n\t\t\t\t\t<SearchBox />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tconst renderElem = config.searchBoxElement ? getElement(config.searchBoxElement) : null;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{renderElem ? ReactDOM.createPortal(renderSearchBox(), renderElem) : renderSearchBox()}\r\n\r\n\t\t\t<div className=\"hawk\">\r\n\t\t\t\t<div className=\"hawk__body\">\r\n\t\t\t\t\t<FacetRail />\r\n\r\n\t\t\t\t\t<Results />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nimport ConfigProvider from 'components/ConfigProvider';\r\nimport StoreProvider from 'components/StoreProvider';\r\nimport { HawkSearchConfig } from 'types/HawkSearchConfig';\r\nimport { Request } from 'models/Search';\r\n\r\nexport interface HawkSearchProps {\r\n\t/** Global configuration. */\r\n\tconfig: HawkSearchConfig;\r\n\t/** The initial search to perform when initializing the search components. */\r\n\tinitialSearch?: Partial<Request>;\r\n\tchildren: React.ReactNode;\r\n}\r\n\r\nfunction HawkSearch(props: HawkSearchProps) {\r\n\treturn (\r\n\t\t<ConfigProvider config={props.config}>\r\n\t\t\t<StoreProvider initialSearch={props.initialSearch}>{props.children}</StoreProvider>\r\n\t\t</ConfigProvider>\r\n\t);\r\n}\r\n\r\nexport default HawkSearch;\r\n","//\r\n// this file is the entry point for the main search application when running the minified bundle\r\n//\r\n\r\nimport '@babel/polyfill';\r\nimport 'url-search-params-polyfill';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport 'rheostat/initialize';\r\n\r\nimport QueryStringListener from 'components/QueryStringListener';\r\nimport App from 'app/App';\r\nimport HawkSearch from 'components/HawkSearch';\r\nimport { parseLocation } from 'util/QueryString';\r\nimport { HawkSearchConfig } from 'types/HawkSearchConfig';\r\n\r\ndeclare global {\r\n\tinterface Window {\r\n\t\tHawkSearch?: HawkSearchConfig;\r\n\t}\r\n}\r\n\r\nif (window.HawkSearch) {\r\n\tinitializeSearch(window.HawkSearch);\r\n}\r\n\r\nexport function initializeSearch(config: HawkSearchConfig) {\r\n\tif (!config.searchElement) {\r\n\t\tthrow new Error('window.HawkSearch.searchElement has not been configured');\r\n\t}\r\n\r\n\tconst renderElem =\r\n\t\ttypeof config.searchElement === 'string' ? document.getElementById(config.searchElement) : config.searchElement;\r\n\r\n\t// pull the initial search from location\r\n\tconst searchRequest = parseLocation(location);\r\n\r\n\tReactDOM.render(\r\n\t\t<HawkSearch config={config} initialSearch={searchRequest}>\r\n\t\t\t<QueryStringListener />\r\n\t\t\t<App />\r\n\t\t</HawkSearch>,\r\n\t\trenderElem\r\n\t);\r\n}\r\n","import axios, { CancelToken, AxiosRequestConfig } from 'axios';\r\nimport { Request as SearchRequest, Response as SearchResponse } from 'models/Search';\r\nimport { Request as AutocompleteRequest, Response as AutocompleteResponse } from 'models/Autocomplete';\r\nimport { HawkSearchConfig } from 'types/HawkSearchConfig';\r\n\r\nclass HawkClient {\r\n\tprivate baseUrl: string;\r\n\tprivate searchUrl: string;\r\n\tprivate dashboardUrl: string;\r\n\tprivate autocompleteUrl: string;\r\n\r\n\tconstructor(config: HawkSearchConfig) {\r\n\t\tthis.baseUrl = config.apiUrl || 'https://searchapi-dev.hawksearch.net';\r\n\t\tthis.dashboardUrl = config.dashboardUrl || 'http://test.hawksearch.net/';\r\n\t\tthis.searchUrl = config.searchUrl || '/api/v2/search';\r\n\t\tthis.autocompleteUrl = config.autocompleteUrl || '/api/autocomplete';\r\n\t}\r\n\r\n\tpublic async search(request: SearchRequest, cancellationToken?: CancelToken): Promise<SearchResponse> {\r\n\t\tconst result = await axios.post<SearchResponse>(new URL(this.searchUrl, this.baseUrl).href, request, {\r\n\t\t\tcancelToken: cancellationToken,\r\n\t\t});\r\n\t\treturn result.data;\r\n\t}\r\n\r\n\tpublic async autocomplete(\r\n\t\trequest: AutocompleteRequest,\r\n\t\tcancellationToken?: CancelToken\r\n\t): Promise<AutocompleteResponse> {\r\n\t\tconst result = await axios.post<AutocompleteResponse>(\r\n\t\t\tnew URL(this.autocompleteUrl, this.baseUrl).href,\r\n\t\t\trequest,\r\n\t\t\t{\r\n\t\t\t\tcancelToken: cancellationToken,\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\treturn result.data;\r\n\t}\r\n}\r\n\r\nexport default HawkClient;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ControllerStateAndHelpers } from 'downshift';\r\nimport axios, { CancelToken } from 'axios';\r\n\r\nimport HawkClient from 'net/HawkClient';\r\nimport { Response, Product } from 'models/Autocomplete';\r\nimport { useHawkConfig } from 'components/ConfigProvider';\r\n\r\ninterface SearchSuggestionsProps {\r\n\t/** The user entered search string in the autocomplete text input. */\r\n\tquery: string;\r\n\r\n\t/** Downshift's render prop parameter. */\r\n\tdownshift: ControllerStateAndHelpers<Product>;\r\n}\r\n\r\nfunction SearchSuggestions({ query, downshift }: SearchSuggestionsProps) {\r\n\tconst { config } = useHawkConfig();\r\n\r\n\tconst client = new HawkClient(config);\r\n\r\n\tconst [results, setResults] = useState({} as Response);\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n\t// debounce the input search string so that we only do an autocomplete query every so often\r\n\tuseEffect(() => {\r\n\t\t// default to 200ms if not specified\r\n\t\tconst debounceMs = config.autocompleteDebounce || 200;\r\n\r\n\t\tconst cts = axios.CancelToken.source();\r\n\t\tconst timeout = setTimeout(() => doAutocomplete(query, cts.token), debounceMs);\r\n\r\n\t\treturn () => {\r\n\t\t\tcts.cancel();\r\n\t\t\tclearTimeout(timeout);\r\n\t\t};\r\n\t}, [query, config.autocompleteDebounce]);\r\n\r\n\t/**\r\n\t * Performs an autocomplete request to the Hawk API and populates the result set of this component.\r\n\t * @param input The user entered search string that results will be autocompleted for.\r\n\t */\r\n\tasync function doAutocomplete(input: string, cancellationToken?: CancelToken) {\r\n\t\tsetIsLoading(true);\r\n\r\n\t\tlet response: Response | null = null;\r\n\r\n\t\ttry {\r\n\t\t\tresponse = await client.autocomplete(\r\n\t\t\t\t{\r\n\t\t\t\t\tClientGuid: config.clientGuid,\r\n\r\n\t\t\t\t\tKeyword: input,\r\n\t\t\t\t\tDisplayFullResponse: true,\r\n\t\t\t\t},\r\n\t\t\t\tcancellationToken\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tif (axios.isCancel(error)) {\r\n\t\t\t\t// if the request was cancelled, it's because this component was updated\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconsole.error('Autocomplete request error:', error);\r\n\t\t}\r\n\r\n\t\tsetIsLoading(false);\r\n\r\n\t\tif (response) {\r\n\t\t\tsetResults(response);\r\n\t\t}\r\n\t}\r\n\r\n\tconst { Products: products } = results;\r\n\r\n\tconst { getMenuProps, getItemProps, highlightedIndex } = downshift;\r\n\r\n\treturn (\r\n\t\t<div className=\"autosuggest-menu\">\r\n\t\t\t<ul className=\"dropdown-menu autosuggest-menu__list\" {...getMenuProps()}>\r\n\t\t\t\t{isLoading && <li className=\"autosuggest-menu__item\">Loading...</li>}\r\n\r\n\t\t\t\t{products &&\r\n\t\t\t\t\tproducts.map((item, index) => (\r\n\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\thighlightedIndex === index\r\n\t\t\t\t\t\t\t\t\t? 'autosuggest-menu__item autosuggest-menu__item--highlighted'\r\n\t\t\t\t\t\t\t\t\t: 'autosuggest-menu__item'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t{...getItemProps({\r\n\t\t\t\t\t\t\t\titem,\r\n\t\t\t\t\t\t\t\tindex,\r\n\t\t\t\t\t\t\t\tkey: item.Results.DocId,\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{item.ProductName}\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t))}\r\n\r\n\t\t\t\t{!isLoading && products && products.length === 0 && (\r\n\t\t\t\t\t<li className=\"autosuggest-menu__item\">No results.</li>\r\n\t\t\t\t)}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchSuggestions;\r\n","import React from 'react';\r\nimport { DownshiftState, StateChangeOptions, ControllerStateAndHelpers } from 'downshift';\r\n\r\nimport { Product } from 'models/Autocomplete';\r\nimport SearchSuggestions from 'components/ui/SearchBox/SearchSuggestions';\r\n\r\nconst Downshift = React.lazy(() => import(/* webpackChunkName: \"downshift\" */ 'downshift'));\r\n\r\ninterface SearchBoxBaseProps {\r\n\tinitialValue?: string;\r\n\tonSubmit: (event: React.KeyboardEvent<HTMLInputElement>, downshift: ControllerStateAndHelpers<Product>) => void;\r\n}\r\n\r\nfunction SearchBoxBase({ initialValue, onSubmit }: SearchBoxBaseProps) {\r\n\t/** Called when the internal state of downshift changes - we're handling a couple custom behaviors here */\r\n\tfunction handleStateChange(\r\n\t\tstate: DownshiftState<Product>,\r\n\t\tchanges: StateChangeOptions<Product>\r\n\t): Partial<StateChangeOptions<Product>> {\r\n\t\tif (\r\n\t\t\t// NOTE: these strings are hardcoded to support code splitting downshift.\r\n\t\t\t// using the constants from the package will prevent code splitting from operating correctly\r\n\t\t\tchanges.type === '__autocomplete_mouseup__' ||\r\n\t\t\tchanges.type === '__autocomplete_keydown_enter__' ||\r\n\t\t\tchanges.type === '__autocomplete_click_item__'\r\n\t\t) {\r\n\t\t\t// when:\r\n\t\t\t//\r\n\t\t\t//  1. the mouse the clicked outside of downshift\r\n\t\t\t//  2. enter is pressed on the keyboard\r\n\t\t\t//  3. an item is selected from the dropdown\r\n\t\t\t//\r\n\t\t\t// then we want to retain the input value that was originally typed in. by default downshift\r\n\t\t\t// will clear the input value, so we're overriding this behavior here.\r\n\t\t\treturn { ...changes, inputValue: state.inputValue };\r\n\t\t}\r\n\r\n\t\treturn changes;\r\n\t}\r\n\r\n\t/** Called when an item has been selected from the autocomplete results. */\r\n\tfunction handleItemChange(item: Product, downshift: ControllerStateAndHelpers<Product>) {\r\n\t\tlocation.assign(item.Url);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Suspense fallback={<div>Loading...</div>}>\r\n\t\t\t<Downshift\r\n\t\t\t\tstateReducer={handleStateChange}\r\n\t\t\t\titemToString={(item: Product | null) => (item ? item.ProductName : '')}\r\n\t\t\t\tonChange={handleItemChange}\r\n\t\t\t\tinitialInputValue={initialValue}\r\n\t\t\t>\r\n\t\t\t\t{(options: ControllerStateAndHelpers<Product>) => {\r\n\t\t\t\t\tconst { isOpen, inputValue, getInputProps, openMenu } = options;\r\n\r\n\t\t\t\t\tconst showSuggestions = isOpen && inputValue && inputValue.length > 0;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className=\"hawk__searchBox__searchInput\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t{...getInputProps({\r\n\t\t\t\t\t\t\t\t\tonKeyDown: event => {\r\n\t\t\t\t\t\t\t\t\t\tif (onSubmit) {\r\n\t\t\t\t\t\t\t\t\t\t\tonSubmit(event, options);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t},\r\n\r\n\t\t\t\t\t\t\t\t\t// when the input is focused again, reopen the downshift menu\r\n\t\t\t\t\t\t\t\t\tonFocus: () => {\r\n\t\t\t\t\t\t\t\t\t\tif (inputValue && inputValue.length > 0) {\r\n\t\t\t\t\t\t\t\t\t\t\topenMenu();\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t},\r\n\r\n\t\t\t\t\t\t\t\t\tplaceholder: 'Enter a search term',\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{showSuggestions ? (\r\n\t\t\t\t\t\t\t\t<SearchSuggestions query={inputValue || ''} downshift={options} />\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t</Downshift>\r\n\t\t</React.Suspense>\r\n\t);\r\n}\r\n\r\nexport default SearchBoxBase;\r\n","import React, { useContext } from 'react';\r\n\r\nimport { HawkSearchConfig } from 'types/HawkSearchConfig';\r\n\r\nconst ConfigContext = React.createContext({} as ConfigContextValue);\r\n\r\nexport interface ConfigContextValue {\r\n\t/** Global configuration. */\r\n\tconfig: HawkSearchConfig;\r\n}\r\n\r\nexport interface ConfigProviderProps {\r\n\tconfig: HawkSearchConfig;\r\n\tchildren: React.ReactNode;\r\n}\r\n\r\n// declare webpack's constant to appease typescript\r\ndeclare var __webpack_public_path__: string;\r\n\r\nfunction ConfigProvider({ config, children }: ConfigProviderProps) {\r\n\tif (config.assetPath) {\r\n\t\tlet path = config.assetPath;\r\n\r\n\t\t// ensure the provided path both starts and ends with a slash\r\n\t\tif (!path.startsWith('/')) {\r\n\t\t\tpath = '/' + path;\r\n\t\t}\r\n\t\tif (!path.endsWith('/')) {\r\n\t\t\tpath = path + '/';\r\n\t\t}\r\n\r\n\t\t// allow consumers to tell webpack where to load code split/lazy loaded files from, as they may not be\r\n\t\t// hosting our JS from /assets/ (the default path)\r\n\t\t__webpack_public_path__ = path;\r\n\t}\r\n\r\n\treturn <ConfigContext.Provider value={{ config }}>{children}</ConfigContext.Provider>;\r\n}\r\n\r\nexport function useHawkConfig() {\r\n\tconst context = useContext(ConfigContext);\r\n\r\n\tif (!context.config) {\r\n\t\tthrow new Error(\r\n\t\t\t'No HawkSearchConfig is available, did you forget to wrap your components in a ConfigProvider component?'\r\n\t\t);\r\n\t}\r\n\r\n\treturn context;\r\n}\r\n\r\nexport default ConfigProvider;\r\n"],"sourceRoot":""}